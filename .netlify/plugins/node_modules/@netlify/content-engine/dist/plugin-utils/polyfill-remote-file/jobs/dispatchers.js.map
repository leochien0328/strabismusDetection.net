{"version":3,"file":"dispatchers.js","names":["_path","_interopRequireDefault","require","_getGatsbyVersion","_urlGenerator","_getRequestHeadersForUrl","shouldDispatch","process","env","GATSBY_CLOUD_IMAGE_CDN","NODE_ENV","dispatchLocalFileServiceJob","url","filename","contentDigest","actions","store","_publicUrl$pop","_publicUrl$pop$split","_global$__GATSBY","GATSBY_VERSION","getGatsbyVersion","publicUrl","generateFileUrl","split","unshift","outputFilename","decodeURI","pop","httpHeaders","getRequestHeadersForUrl","createJobV2","name","inputPaths","outputDir","path","join","global","__GATSBY","root","cwd","filter","Boolean","args","version","resolve","__dirname","dispatchLocalImageServiceJob","mimeType","imageArgs","_publicUrl$pop2","_publicUrl$pop2$split","_global$__GATSBY2","generateImageUrl","internal"],"sources":["../../../../src/plugin-utils/polyfill-remote-file/jobs/dispatchers.ts"],"sourcesContent":["import path from \"path\";\nimport { getGatsbyVersion } from \"../utils/get-gatsby-version\";\nimport { generateFileUrl, generateImageUrl } from \"../utils/url-generator\";\nimport type { Actions, Store } from \"../../../types\";\nimport { getRequestHeadersForUrl } from \"../utils/get-request-headers-for-url\";\n\nexport function shouldDispatch(): boolean {\n  return (\n    !(\n      process.env.GATSBY_CLOUD_IMAGE_CDN === `1` ||\n      process.env.GATSBY_CLOUD_IMAGE_CDN === `true`\n    ) && process.env.NODE_ENV === `production`\n  );\n}\n\nexport function dispatchLocalFileServiceJob(\n  {\n    url,\n    filename,\n    contentDigest,\n  }: { url: string; filename: string; contentDigest: string },\n  actions: Actions,\n  store?: Store,\n): void {\n  const GATSBY_VERSION = getGatsbyVersion();\n  const publicUrl = generateFileUrl(\n    {\n      url,\n      filename,\n    },\n    store,\n  ).split(`/`);\n\n  publicUrl.unshift(`public`);\n  // get filename and remove querystring\n  const outputFilename = decodeURI(publicUrl.pop()?.split(`?`)?.[0] as string);\n\n  const httpHeaders = getRequestHeadersForUrl(url, store);\n\n  actions.createJobV2(\n    {\n      name: `FILE_CDN`,\n      inputPaths: [],\n      // we know it's an image so we just mimic an image\n      outputDir: path.join(\n        global.__GATSBY?.root || process.cwd(),\n        ...publicUrl.filter(Boolean),\n      ),\n      args: {\n        url,\n        filename: outputFilename,\n        contentDigest,\n        httpHeaders,\n      },\n    },\n    {\n      name: `gatsby`,\n      // @ts-ignore - version is allowed\n      version: GATSBY_VERSION,\n      resolve: __dirname,\n    },\n  );\n}\n\nexport function dispatchLocalImageServiceJob(\n  {\n    url,\n    filename,\n    mimeType,\n    contentDigest,\n  }: {\n    url: string;\n    filename: string;\n    mimeType: string;\n    contentDigest: string;\n  },\n  imageArgs: Parameters<typeof generateImageUrl>[1],\n  actions: Actions,\n  store?: Store,\n): void {\n  const GATSBY_VERSION = getGatsbyVersion();\n  const publicUrl = generateImageUrl(\n    {\n      url,\n      mimeType,\n      filename,\n      internal: { contentDigest },\n    },\n    imageArgs,\n    store,\n  ).split(`/`);\n  publicUrl.unshift(`public`);\n  // get filename and remove querystring\n  const outputFilename = decodeURI(publicUrl.pop()?.split(`?`)?.[0] as string);\n\n  const httpHeaders = getRequestHeadersForUrl(url, store) as\n    | Record<string, string>\n    | undefined;\n\n  actions.createJobV2(\n    {\n      name: `IMAGE_CDN`,\n      inputPaths: [],\n      outputDir: path.join(\n        global.__GATSBY?.root || process.cwd(),\n        ...publicUrl.filter(Boolean),\n      ),\n      args: {\n        url,\n        filename: outputFilename,\n        contentDigest,\n        httpHeaders,\n        ...imageArgs,\n      },\n    },\n    {\n      name: `gatsby`,\n      // @ts-ignore - version is allowed\n      version: GATSBY_VERSION,\n      resolve: __dirname,\n    },\n  );\n}\n"],"mappings":"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"}