{"version":3,"file":"index.js","names":["_path","_interopRequireDefault","require","_graphqlCompose","_getRemoteFileEnums","exports","getRemoteFileEnums","_getGatsbyVersion","_hasFeature","_publicUrlResolver","publicUrlResolver","_resizeResolver","resizeResolver","_gatsbyImageResolver","gatsbyImageResolver","_httpRoutes","polyfillImageServiceDevRoutes","addImageRoutes","enums","getRemoteFileFields","actions","store","id","mimeType","filename","filesize","width","height","publicUrl","generatePublicUrlFieldConfig","resize","generateResizeFieldConfig","gatsbyImage","generateGatsbyImageFieldConfig","addRemoteFilePolyfillInterface","type","schema","hasFeature","config","interfaces","includes","push","composer","SchemaComposer","createEnumTC","bind","types","key","buildEnumType","name","getTypeName","values","getFields","buildObjectType","fields","src","buildInterfaceType","createTypes","version","getGatsbyVersion","resolve","path","join","__dirname","isImageCdnEnabled","process","env","GATSBY_CLOUD_IMAGE_CDN"],"sources":["../../../src/plugin-utils/polyfill-remote-file/index.ts"],"sourcesContent":["import path from \"path\";\nimport { SchemaComposer } from \"graphql-compose\";\nimport { getRemoteFileEnums } from \"./graphql/get-remote-file-enums\";\nimport { getGatsbyVersion } from \"./utils/get-gatsby-version\";\nimport { hasFeature } from \"../has-feature\";\nimport {\n  generatePublicUrlFieldConfig,\n  publicUrlResolver,\n} from \"./graphql/public-url-resolver\";\nimport {\n  generateResizeFieldConfig,\n  resizeResolver,\n} from \"./graphql/resize-resolver\";\nimport {\n  generateGatsbyImageFieldConfig,\n  gatsbyImageResolver,\n} from \"./graphql/gatsby-image-resolver\";\n\nimport type { Actions, Store } from \"../../types\";\nimport type { InterfaceTypeComposerAsObjectDefinition } from \"graphql-compose\";\nimport type { SchemaBuilder, IRemoteFileNode } from \"./types\";\n\nlet enums: ReturnType<typeof getRemoteFileEnums> | undefined;\n\nexport function getRemoteFileFields(\n  enums: ReturnType<typeof getRemoteFileEnums>,\n  actions: Actions,\n  store?: Store,\n): Record<string, unknown> {\n  return {\n    id: `ID!`,\n    mimeType: `String!`,\n    filename: `String!`,\n    filesize: `Int`,\n    width: `Int`,\n    height: `Int`,\n    publicUrl: generatePublicUrlFieldConfig(actions, store),\n    resize: generateResizeFieldConfig(enums, actions, store),\n    gatsbyImage: generateGatsbyImageFieldConfig(enums, actions, store),\n  };\n}\n\nfunction addRemoteFilePolyfillInterface<\n  T = ReturnType<SchemaBuilder[\"buildObjectType\"]>,\n>(\n  type: T,\n  {\n    schema,\n    actions,\n    store,\n  }: {\n    schema: SchemaBuilder;\n    actions: Actions;\n    store: Store;\n  },\n): T {\n  // When the image-cdn is part of Gatsby we will only add the RemoteFile interface if necessary\n  if (hasFeature(`image-cdn`)) {\n    // @ts-ignore - wrong typing by typecomposer\n    if (!type.config.interfaces.includes(`RemoteFile`)) {\n      // @ts-ignore - wrong typing by typecomposer\n      type.config.interfaces.push(`RemoteFile`);\n    }\n\n    return type;\n  }\n\n  if (!enums) {\n    // We only want to create the enums and interface once\n    const composer = new SchemaComposer();\n    enums = getRemoteFileEnums(composer.createEnumTC.bind(composer));\n\n    const types: Array<\n      | string\n      | ReturnType<SchemaBuilder[\"buildObjectType\"]>\n      | ReturnType<SchemaBuilder[\"buildInterfaceType\"]>\n      | ReturnType<SchemaBuilder[\"buildEnumType\"]>\n    > = [];\n\n    for (const key in enums) {\n      if (enums[key]) {\n        types.push(\n          schema.buildEnumType({\n            name: enums[key].getTypeName(),\n            values: enums[key].getFields(),\n          }),\n        );\n      }\n    }\n\n    types.push(\n      schema.buildObjectType({\n        name: `RemoteFileResize`,\n        fields: {\n          width: `Int`,\n          height: `Int`,\n          src: `String`,\n        },\n      }),\n      schema.buildInterfaceType({\n        name: `RemoteFile`,\n        fields: getRemoteFileFields(\n          enums,\n          actions,\n          store,\n        ) as InterfaceTypeComposerAsObjectDefinition<\n          IRemoteFileNode,\n          unknown\n        >[\"fields\"],\n      }),\n    );\n\n    actions.createTypes(types, {\n      name: `gatsby`,\n      // @ts-ignore - version is allowed\n      version: getGatsbyVersion(),\n      resolve: path.join(__dirname, `../`),\n    });\n  }\n\n  // @ts-ignore - wrong typing by typecomposer\n  type.config.interfaces = type.config.interfaces || [];\n  // @ts-ignore - wrong typing by typecomposer\n  if (!type.config.interfaces.includes(`RemoteFile`)) {\n    // @ts-ignore - wrong typing by typecomposer\n    type.config.interfaces.push(`RemoteFile`);\n  }\n  // @ts-ignore - wrong typing by typecomposer\n  type.config.fields = {\n    // @ts-ignore - wrong typing by typecomposer\n    ...type.config.fields,\n    ...getRemoteFileFields(enums, actions, store),\n  };\n\n  return type;\n}\n\nfunction isImageCdnEnabled(): boolean {\n  return (\n    process.env.GATSBY_CLOUD_IMAGE_CDN === `1` ||\n    process.env.GATSBY_CLOUD_IMAGE_CDN === `true`\n  );\n}\n\nexport { polyfillImageServiceDevRoutes, addImageRoutes } from \"./http-routes\";\nexport {\n  getRemoteFileEnums,\n  addRemoteFilePolyfillInterface,\n  gatsbyImageResolver,\n  resizeResolver,\n  publicUrlResolver,\n  isImageCdnEnabled,\n};\n"],"mappings":"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"}