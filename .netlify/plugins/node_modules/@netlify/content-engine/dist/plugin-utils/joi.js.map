{"version":3,"file":"joi.js","names":["_joi","_interopRequireDefault","require","_pluginOptionsSchemaJoiType","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","Joi","joi","extend","type","rules"],"sources":["../../src/plugin-utils/joi.ts"],"sourcesContent":["import joi from \"joi\";\nimport { PluginOptionsSchemaJoi } from \"./utils/plugin-options-schema-joi-type\";\n\nexport * from \"./utils/plugin-options-schema-joi-type\";\nexport const Joi: PluginOptionsSchemaJoi = joi.extend({\n  // This tells Joi to extend _all_ types with .dotenv(), see\n  // https://github.com/sideway/joi/commit/03adf22eb1f06c47d1583617093edee3a96b3873\n  // @ts-ignore Joi types weren't updated with that commit, PR: https://github.com/sideway/joi/pull/2477\n  type: /^s/,\n  rules: {\n    // NOTE(@mxstbr): Disabled until we decide on the necessity for this API.\n    // dotenv: {\n    //   args: [`name`],\n    //   validate(value, helpers, args): void {\n    //     if (!args.name) {\n    //       return helpers.error(\n    //         `any.dotenv requires the environment variable name`\n    //       )\n    //     }\n    //     return value\n    //   },\n    //   method(name): Schema {\n    //     return this.$_addRule({ name: `dotenv`, args: { name } })\n    //   },\n    // },\n  },\n});\n"],"mappings":";;;;;;;;AAAA,IAAAA,IAAA,GAAAC,sBAAA,CAAAC,OAAA;AAGA,IAAAC,2BAAA,GAAAD,OAAA;AAAAE,MAAA,CAAAC,IAAA,CAAAF,2BAAA,EAAAG,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAC,YAAA,EAAAJ,GAAA;EAAA,IAAAA,GAAA,IAAAK,OAAA,IAAAA,OAAA,CAAAL,GAAA,MAAAJ,2BAAA,CAAAI,GAAA;EAAAK,OAAA,CAAAL,GAAA,IAAAJ,2BAAA,CAAAI,GAAA;AAAA;AACO,MAAMM,GAA2B,GAAAD,OAAA,CAAAC,GAAA,GAAGC,YAAG,CAACC,MAAM,CAAC;EACpD;EACA;EACA;EACAC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEJ,CAAC,CAAC"}