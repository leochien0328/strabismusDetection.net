{"version":3,"file":"build-example-data.js","names":["getExampleObject","fieldMap","typeName","typeConflictReporter","Object","keys","reduce","acc","key","value","buildExampleValue","path","descriptor","exports","isArrayItem","type","conflicts","resolveWinnerType","addConflict","prepareConflictExamples","typeInfo","isMixOfDateAndString","hasOnlyEmptyStrings","example","item","exampleItemValue","nodes","multiple","linkedNodes","filter","dprops","hasKeys","result","forEach","prop","candidates","possibleTypes","length","isMixedNumber","typeNameMapper","includes","reportedValueMapper","_descriptor$typeName","_descriptor$relatedNo","relatedNode","find","_descriptor$relatedNo2","relatedNodeList","object","itemValue","array","undefined","conflictingTypes","groups","_groupBy2","default","_descriptor$type","first","map","nodeId","join","float","int","Boolean","total","date","string","empty"],"sources":["../../../src/schema/infer/build-example-data.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { groupBy } from \"lodash\";\nimport {\n  IValueDescriptor,\n  ValueType,\n  ITypeMetadata,\n} from \"./inference-metadata\";\nimport {\n  TypeConflictReporter,\n  ITypeConflictExample,\n} from \"./type-conflict-reporter\";\n\n// See gatsby/src/schema/infer/inference-metadata.ts for the ValueDescriptor structs (-> typeInfo)\n\nconst getExampleObject = ({\n  fieldMap = {},\n  typeName,\n  typeConflictReporter,\n}: ITypeMetadata): { [k: string]: unknown } =>\n  Object.keys(fieldMap).reduce((acc, key) => {\n    const value = buildExampleValue({\n      path: `${typeName}.${key}`,\n      descriptor: fieldMap[key],\n      typeConflictReporter,\n    });\n    if (key && value !== null) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n\nconst buildExampleValue = ({\n  descriptor,\n  typeConflictReporter,\n  isArrayItem = false,\n  path = ``,\n}: {\n  descriptor: IValueDescriptor;\n  typeConflictReporter?: TypeConflictReporter;\n  path?: string;\n  isArrayItem?: boolean;\n}): unknown | null => {\n  const [type, conflicts = false] = resolveWinnerType(descriptor);\n\n  if (conflicts && typeConflictReporter) {\n    typeConflictReporter.addConflict(\n      path,\n      prepareConflictExamples(descriptor, isArrayItem),\n    );\n  }\n\n  const typeInfo = descriptor[type];\n\n  switch (type) {\n    case `null`:\n      return null;\n\n    case `date`:\n    case `string`: {\n      if (isMixOfDateAndString(descriptor)) {\n        return hasOnlyEmptyStrings(descriptor) ? `1978-09-26` : `String`;\n      }\n      return typeInfo.example;\n    }\n\n    case `array`: {\n      const { item } = typeInfo;\n      const exampleItemValue = item\n        ? buildExampleValue({\n            descriptor: item,\n            isArrayItem: true,\n            typeConflictReporter,\n            path,\n          })\n        : null;\n      return exampleItemValue === null ? null : [exampleItemValue];\n    }\n\n    case `relatedNode`:\n    case `relatedNodeList`: {\n      const { nodes = {} } = typeInfo;\n      return {\n        multiple: type === `relatedNodeList`,\n        linkedNodes: Object.keys(nodes).filter((key) => nodes[key] > 0),\n      };\n    }\n\n    case `object`: {\n      const { dprops } = typeInfo;\n      let hasKeys = false;\n      const result = {};\n      Object.keys(dprops).forEach((prop) => {\n        const value = buildExampleValue({\n          descriptor: dprops[prop],\n          typeConflictReporter,\n          path: `${path}.${prop}`,\n        });\n        if (value !== null) {\n          hasKeys = true;\n          result[prop] = value;\n        }\n      });\n      return hasKeys ? result : null;\n    }\n\n    default:\n      return typeInfo.example;\n  }\n};\n\nconst resolveWinnerType = (\n  descriptor: IValueDescriptor,\n): [ValueType | \"null\", boolean?] => {\n  const candidates = possibleTypes(descriptor);\n  if (candidates.length === 1) {\n    return [candidates[0]];\n  }\n  if (candidates.length === 2 && isMixedNumber(descriptor)) {\n    return [`float`];\n  }\n  if (candidates.length === 2 && isMixOfDateAndString(descriptor)) {\n    return [hasOnlyEmptyStrings(descriptor) ? `date` : `string`];\n  }\n  if (candidates.length > 1) {\n    return [`null`, true];\n  }\n  return [`null`];\n};\n\nconst prepareConflictExamples = (\n  descriptor: IValueDescriptor,\n  isArrayItem: boolean,\n): Array<ITypeConflictExample> => {\n  const typeNameMapper = (typeName: ValueType): string => {\n    if (typeName === `relatedNode`) {\n      return `string`;\n    }\n    if (typeName === `relatedNodeList`) {\n      return `[string]`;\n    }\n    return [`float`, `int`].includes(typeName) ? `number` : typeName;\n  };\n  const reportedValueMapper = (typeName: ValueType): unknown => {\n    if (typeName === `relatedNode`) {\n      const { nodes } = descriptor.relatedNode ?? { nodes: {} };\n      return Object.keys(nodes).find((key) => nodes[key] > 0);\n    }\n    if (typeName === `relatedNodeList`) {\n      const { nodes } = descriptor.relatedNodeList ?? { nodes: {} };\n      return Object.keys(nodes).filter((key) => nodes[key] > 0);\n    }\n    if (typeName === `object`) {\n      return getExampleObject({\n        typeName,\n        fieldMap: descriptor!.object!.dprops,\n      });\n    }\n    if (typeName === `array`) {\n      const itemValue = buildExampleValue({\n        descriptor: descriptor!.array!.item,\n        isArrayItem: true,\n      });\n      return itemValue === null || itemValue === undefined ? [] : [itemValue];\n    }\n    return descriptor[typeName]?.example;\n  };\n  const conflictingTypes = possibleTypes(descriptor);\n\n  if (isArrayItem) {\n    // Differentiate conflict examples by node they were first seen in.\n    // See Caveats section in the header of the ./inference-metadata.ts\n    const groups = groupBy(\n      conflictingTypes,\n      (type) => descriptor[type]?.first || ``,\n    );\n    return Object.keys(groups).map((nodeId) => {\n      return {\n        type: `[${groups[nodeId].map(typeNameMapper).join(`,`)}]`,\n        value: groups[nodeId].map(reportedValueMapper),\n      };\n    });\n  }\n\n  return conflictingTypes.map((type) => {\n    return {\n      type: typeNameMapper(type),\n      value: reportedValueMapper(type),\n    };\n  });\n};\n\nconst isMixedNumber = (descriptor: IValueDescriptor): boolean => {\n  const { float, int } = descriptor;\n  return Boolean(float?.total) && Boolean(int?.total);\n};\n\nconst isMixOfDateAndString = (descriptor: IValueDescriptor): boolean => {\n  const { date, string } = descriptor;\n  return Boolean(date?.total) && Boolean(string?.total);\n};\n\nconst hasOnlyEmptyStrings = (descriptor: IValueDescriptor): boolean => {\n  const { string } = descriptor;\n  return string !== undefined && string?.empty === string?.total;\n};\n\nconst possibleTypes = (descriptor: IValueDescriptor = {}): Array<ValueType> =>\n  Object.keys(descriptor).filter(\n    (type) => descriptor[type].total > 0,\n  ) as Array<ValueType>;\n\nexport { getExampleObject };\n"],"mappings":"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"}