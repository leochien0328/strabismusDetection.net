{"version":3,"file":"node-interface.js","names":["_sort","require","_filter","NodeInterfaceFields","exports","getOrCreateNodeInterface","schemaComposer","internalTC","getOrCreateOTC","tc","addFields","content","contentDigest","description","fieldOwners","ignoreType","mediaType","owner","type","contentFilePath","getInputTypeComposer","nodeInterfaceTC","getOrCreateIFTC","setDescription","id","parent","resolve","source","_args","context","path","nodeModel","getNodeById","extensions","searchable","SEARCHABLE_ENUM","SEARCHABLE","sortable","SORTABLE_ENUM","SORTABLE","needsResolve","children","getNodesByIds","ids","internal","getTypeNonNull","nodeInputTC","extendField","addNodeInterfaceFields","typeComposer","getFields","setResolveType","node","addSchemaMustHaveType","addNodeInterface","addInterface","getNodeInterface"],"sources":["../../../src/schema/types/node-interface.ts"],"sourcesContent":["import { SORTABLE_ENUM } from \"./sort\";\nimport { SEARCHABLE_ENUM } from \"./filter\";\nimport {\n  SchemaComposer,\n  InterfaceTypeComposer,\n  ObjectTypeComposer,\n} from \"graphql-compose\";\nimport { IGatsbyResolverContext } from \"../type-definitions\";\nimport { Node } from \"../../types\";\n\nexport const NodeInterfaceFields = [`id`, `parent`, `children`, `internal`];\n\nconst getOrCreateNodeInterface = <TSource, TArgs>(\n  schemaComposer: SchemaComposer<IGatsbyResolverContext<TSource, TArgs>>,\n): InterfaceTypeComposer => {\n  // TODO: why is `mediaType` on Internal? Applies only to File!?\n  // `fieldOwners` is an object\n  // Should we drop ignoreType?\n  const internalTC = schemaComposer.getOrCreateOTC(`Internal`, (tc) => {\n    tc.addFields({\n      content: `String`,\n      contentDigest: `String!`,\n      description: `String`,\n      fieldOwners: [`String`],\n      ignoreType: `Boolean`,\n      mediaType: `String`,\n      owner: `String!`,\n      type: `String!`,\n      contentFilePath: `String`,\n    });\n    // TODO: Can be removed with graphql-compose 5.11\n    tc.getInputTypeComposer();\n  });\n\n  const nodeInterfaceTC = schemaComposer.getOrCreateIFTC(`Node`, (tc) => {\n    tc.setDescription(`Node Interface`);\n    tc.addFields({\n      id: `ID!`,\n      parent: {\n        type: `Node`,\n        resolve: (source, _args, context): Node | null => {\n          const { path } = context;\n          return context.nodeModel.getNodeById({ id: source.parent }, { path });\n        },\n        extensions: {\n          searchable: SEARCHABLE_ENUM.SEARCHABLE,\n          sortable: SORTABLE_ENUM.SORTABLE,\n          needsResolve: true,\n        },\n      },\n      children: {\n        type: `[Node!]!`,\n        resolve: (source, _args, context): Array<Node> => {\n          const { path } = context;\n          return context.nodeModel.getNodesByIds(\n            { ids: source.children },\n            { path },\n          );\n        },\n        extensions: {\n          searchable: SEARCHABLE_ENUM.SEARCHABLE,\n          sortable: SORTABLE_ENUM.SORTABLE,\n          needsResolve: true,\n        },\n      },\n      internal: internalTC.getTypeNonNull(),\n    });\n\n    const nodeInputTC = tc.getInputTypeComposer();\n    nodeInputTC.extendField(`id`, { type: `String` });\n  });\n\n  return nodeInterfaceTC;\n};\n\nexport const addNodeInterfaceFields = <TSource = any, TArgs = any>({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<IGatsbyResolverContext<TSource, TArgs>>;\n  typeComposer: ObjectTypeComposer;\n}): void => {\n  const nodeInterfaceTC = getOrCreateNodeInterface(schemaComposer);\n  typeComposer.addFields(nodeInterfaceTC.getFields());\n  nodeInterfaceTC.setResolveType((node) => node.internal.type);\n  schemaComposer.addSchemaMustHaveType(typeComposer);\n};\n\nexport const addNodeInterface = <TSource = any, TArgs = any>({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<IGatsbyResolverContext<TSource, TArgs>>;\n  typeComposer: ObjectTypeComposer;\n}): void => {\n  const nodeInterfaceTC = getOrCreateNodeInterface(schemaComposer);\n  typeComposer.addInterface(nodeInterfaceTC);\n  addNodeInterfaceFields({ schemaComposer, typeComposer });\n};\n\nexport const getNodeInterface = <TSource = any, TContext = any, TArgs = any>({\n  schemaComposer,\n}: {\n  schemaComposer: SchemaComposer<IGatsbyResolverContext<TSource, TArgs>>;\n}): InterfaceTypeComposer<TSource, TContext> =>\n  getOrCreateNodeInterface(schemaComposer);\n"],"mappings":"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"}