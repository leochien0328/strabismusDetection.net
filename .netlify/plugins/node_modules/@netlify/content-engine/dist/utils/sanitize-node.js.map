{"version":3,"file":"sanitize-node.js","names":["omitUndefined","data","isPlainObject","_isPlainObject2","default","_pickBy2","p","undefined","filter","isTypeSupported","type","isSupported","Date","sanitizeNode","isNode","path","Set","isArray","_isArray2","has","add","returnData","anyFieldChanged","hasLengthProperty","Object","prototype","hasOwnProperty","call","lengthProperty","length","_each2","value","key","exports"],"sources":["../../src/utils/sanitize-node.ts"],"sourcesContent":["import _ from \"lodash\";\n\nimport type { IGatsbyNode } from \"../redux/types\";\nimport type { GatsbyIterable } from \"../datastore/common/iterable\";\n\ntype Data = IGatsbyNode | GatsbyIterable<IGatsbyNode>;\n\ntype OmitUndefined = (data: Data) => Partial<Data>;\n\n/**\n * @param {Object|Array} data\n * @returns {Object|Array} data without undefined values\n */\nconst omitUndefined: OmitUndefined = (data) => {\n  const isPlainObject = _.isPlainObject(data);\n  if (isPlainObject) {\n    return _.pickBy(data, (p) => p !== undefined);\n  }\n\n  return (data as GatsbyIterable<IGatsbyNode>).filter((p) => p !== undefined);\n};\n\ntype isTypeSupported = (data: Data) => boolean;\n\n/**\n * @param {*} data\n * @return {boolean} Boolean if type is supported\n */\nconst isTypeSupported: isTypeSupported = (data) => {\n  if (data === null) {\n    return true;\n  }\n\n  const type = typeof data;\n  const isSupported =\n    type === `number` ||\n    type === `string` ||\n    type === `boolean` ||\n    data instanceof Date;\n\n  return isSupported;\n};\n\ntype sanitizeNode = (\n  data: Data,\n  isNode?: boolean,\n  path?: Set<unknown>,\n) => Data | undefined;\n\n/**\n * Make data serializable\n * @param {(Object|Array)} data to sanitize\n * @param {boolean} isNode = true\n * @param {Set<string>} path = new Set\n */\nexport const sanitizeNode: sanitizeNode = (\n  data,\n  isNode = true,\n  path = new Set(),\n) => {\n  const isPlainObject = _.isPlainObject(data);\n  const isArray = _.isArray(data);\n\n  if (isPlainObject || isArray) {\n    if (path.has(data)) return data;\n    path.add(data);\n\n    const returnData = isPlainObject\n      ? ({} as IGatsbyNode)\n      : ([] as Array<IGatsbyNode>);\n    let anyFieldChanged = false;\n\n    // _.each is a \"Collection\" method and thus objects with \"length\" property are iterated as arrays\n    const hasLengthProperty = isPlainObject\n      ? Object.prototype.hasOwnProperty.call(data, `length`)\n      : false;\n    let lengthProperty;\n    if (hasLengthProperty) {\n      lengthProperty = (data as IGatsbyNode).length;\n      delete (data as IGatsbyNode).length;\n    }\n\n    _.each(data, (value, key) => {\n      if (isNode && key === `internal`) {\n        returnData[key] = value;\n        return;\n      }\n      returnData[key] = sanitizeNode(value as Data, false, path);\n\n      if (returnData[key] !== value) {\n        anyFieldChanged = true;\n      }\n    });\n\n    if (hasLengthProperty) {\n      (data as IGatsbyNode).length = lengthProperty;\n      returnData.length = sanitizeNode(lengthProperty as Data, false, path);\n      if (returnData.length !== lengthProperty) {\n        anyFieldChanged = true;\n      }\n    }\n\n    if (anyFieldChanged) {\n      data = omitUndefined(returnData as Data) as Data;\n    }\n\n    // arrays and plain objects are supported - no need to to sanitize\n    return data;\n  }\n\n  if (!isTypeSupported(data)) {\n    return undefined;\n  } else {\n    return data;\n  }\n};\n"],"mappings":"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"}