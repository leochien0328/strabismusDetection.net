{"version":3,"file":"controllable-script.js","names":["_path","_interopRequireDefault","require","_execa","_detectPortInUseAndPrompt","_fsExtra","_signalExit","_uuid","_coreUtils","_reporter","_getSslCert","getDebugPort","port","getDebugInfo","program","Object","prototype","hasOwnProperty","call","inspect","break","inspectBrk","exports","ControllableScript","shouldPrintLogs","constructor","script","debugInfo","options","printLogs","maybeKillZombie","processName","directory","dirname","path","join","pidFileName","fs","existsSync","pid","readFileSync","setTimeout","process","kill","Number","console","info","e","start","_global$__GATSBY","_this$process","env","cwd","args","md5","tmpFileName","outputFileSync","isRunning","push","defaultExecArgv","execArgv","filter","arg","startsWith","execa","node","FORCE_COLOR","GATSBY_NODE_GLOBALS","JSON","stringify","global","__GATSBY","NODE_ENV","stdio","nodeOptions","stdout","stderr","Error","pipe","pidDir","ensureDirSync","writeFileSync","toString","stop","signal","code","killTimeout","killWith","send","type","action","payload","err","Promise","resolve","on","removeAllListeners","clearTimeout","undefined","onMessage","callback","offMessage","off","onExit","offExit","msg","isRestarting","exampleImpl","buildId","v4","root","parseInt","developProcessPath","slash","detectPortInUseAndPrompt","host","message","exit","developPort","https","reporter","panic","sslHost","ssl","getSslCert","name","caFile","certFile","keyFile","developProcess","proxyPort","handleChildProcessIPC","shutdownServices","_code","services","all","catch","then"],"sources":["../../src/utils/controllable-script.ts"],"sourcesContent":["import path from \"path\";\nimport { ChildProcess } from \"child_process\";\nimport execa from \"execa\";\nimport { detectPortInUseAndPrompt } from \"../utils/detect-port-in-use-and-prompt\";\nimport fs from \"fs-extra\";\nimport onExit from \"signal-exit\";\nimport { v4 } from \"../core-utils/uuid\";\nimport { md5, slash } from \"../core-utils\";\nimport reporter from \"../reporter\";\nimport { getSslCert } from \"../utils/get-ssl-cert\";\nimport { IProgram, IDebugInfo } from \"./../commands/types\";\n\n// Return a user-supplied port otherwise the default Node.js debugging port\nconst getDebugPort = (port?: number): number => port ?? 9229;\n\nexport const getDebugInfo = (program: IProgram): IDebugInfo | null => {\n  if (Object.prototype.hasOwnProperty.call(program, `inspect`)) {\n    return {\n      port: getDebugPort(program.inspect),\n      break: false,\n    };\n  } else if (Object.prototype.hasOwnProperty.call(program, `inspectBrk`)) {\n    return {\n      port: getDebugPort(program.inspectBrk),\n      break: true,\n    };\n  } else {\n    return null;\n  }\n};\n\nexport class ControllableScript {\n  public process?: ChildProcess;\n  private script;\n  private debugInfo: IDebugInfo | null;\n  private shouldPrintLogs = true;\n  public isRunning;\n\n  constructor(\n    script,\n    debugInfo: IDebugInfo | null,\n    options?: {\n      printLogs?: false;\n    },\n  ) {\n    this.script = script;\n    this.debugInfo = debugInfo;\n\n    if (\n      typeof options?.printLogs !== `undefined` &&\n      options.printLogs === false\n    ) {\n      this.shouldPrintLogs = false;\n    }\n  }\n\n  // todo this is kinda naive. if multiple processes start with the same name, we possibly wont get them all due to a race condition. this only works when starting multiple subprocesses in the same process without calling .stop() in between. We'd need to use a lockfile or something to make this work reliably across processes.\n  maybeKillZombie(processName: string, directory: string) {\n    const dirname = path.join(directory, `.cache`);\n    const pidFileName = dirname + `/pids/${processName}.pid`;\n\n    if (fs.existsSync(pidFileName)) {\n      const pid = fs.readFileSync(pidFileName, `utf-8`);\n      if (pid) {\n        setTimeout(() => {\n          try {\n            process.kill(Number(pid), `SIGKILL`);\n            console.info(\n              `[content-engine] killing zombie process ${pid} for ${processName}. You may need to ensure you're calling engine.stop() when you're done.`,\n            );\n          } catch (e) {\n            // ignore if kill fails, maybe it's already dead, maybe we don't own the process for some reason\n          }\n          // wait 100ms to give the process a chance to die on its own incase we just restarted it\n        }, 100);\n      }\n    }\n  }\n\n  start(options?: { env?: Record<string, string>; directory?: string }): void {\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.env) {\n      options.env = {};\n    }\n\n    if (!options.directory) {\n      options.directory = process.cwd();\n    }\n\n    const args: Array<string> = [];\n\n    const dirname = path.join(options.directory, `.cache`);\n    const processName = `content-engine-process-${md5(dirname)}`;\n    const tmpFileName = path.join(dirname, `${processName}.cjs`);\n\n    this.maybeKillZombie(processName, options.directory);\n\n    fs.outputFileSync(tmpFileName, this.script);\n    this.isRunning = true;\n    // Passing --inspect isn't necessary for the child process to launch a port but it allows some editors to automatically attach\n    if (this.debugInfo) {\n      if (this.debugInfo.break) {\n        args.push(`--inspect-brk=${this.debugInfo.port}`);\n      } else {\n        args.push(`--inspect=${this.debugInfo.port}`);\n      }\n    }\n\n    const defaultExecArgv = process.execArgv.filter(\n      (arg) => !arg.startsWith(`--inspect`),\n    );\n\n    this.process = execa.node(tmpFileName, args, {\n      env: {\n        FORCE_COLOR: `1`,\n        GATSBY_NODE_GLOBALS: JSON.stringify(global.__GATSBY ?? {}),\n        NODE_ENV: process.env.NODE_ENV,\n        ...options.env,\n      },\n      stdio: [`ignore`, `pipe`, `pipe`, `ipc`],\n      cwd: options.directory,\n      nodeOptions: [`--enable-source-maps`, ...defaultExecArgv],\n    });\n\n    if (!this.process.stdout || !this.process.stderr) {\n      // to make TS happy\n      throw new Error(\n        `Somehow the process is undefined immediately after starting it`,\n      );\n    }\n\n    if (this.shouldPrintLogs) {\n      this.process.stdout.pipe(process.stdout);\n      this.process.stderr.pipe(process.stderr);\n    }\n\n    // Write the pid to a file so we can kill it later if it becomes a zombie process\n    if (this.process?.pid) {\n      const pidDir = path.join(dirname, `pids`);\n      fs.ensureDirSync(pidDir);\n      fs.writeFileSync(\n        path.join(pidDir + `/${processName}.pid`),\n        this.process.pid.toString(),\n      );\n    }\n  }\n  stop(signal: NodeJS.Signals | null = null, code?: number): Promise<void> {\n    if (!this.process) {\n      throw new Error(`Trying to stop the process before starting it`);\n    }\n\n    let killTimeout: NodeJS.Timeout;\n\n    try {\n      if (signal) {\n        this.process.kill(signal);\n      } else {\n        // If the process doesn't exit within 1 second, kill it\n        killTimeout = setTimeout(() => {\n          if (this.process) {\n            const killWith = typeof code === `undefined` ? `SIGKILL` : code;\n            this.process.kill(killWith);\n          }\n        }, 1000);\n\n        this.process.send(\n          {\n            type: `COMMAND`,\n            action: {\n              type: `EXIT`,\n              payload: code,\n            },\n          },\n          () => {\n            // The try/catch won't suffice for this process.send\n            // So use the callback to manually catch the Error, otherwise it'll be thrown\n            // Ref: https://nodejs.org/api/child_process.html#child_process_subprocess_send_message_sendhandle_options_callback\n          },\n        );\n      }\n    } catch (err) {\n      // Ignore error if process has crashed or already quit.\n      // Ref: https://github.com/gatsbyjs/gatsby/issues/28011#issuecomment-877302917\n    }\n\n    return new Promise((resolve) => {\n      if (!this.process) {\n        throw new Error(`Trying to stop the process before starting it`);\n      }\n\n      this.process.on(`exit`, () => {\n        if (this.process) {\n          this.process.removeAllListeners();\n        }\n\n        if (killTimeout) clearTimeout(killTimeout);\n\n        this.process = undefined;\n        this.isRunning = false;\n        resolve();\n      });\n    });\n  }\n  onMessage(callback: (msg: any) => void): void {\n    if (!this.process) {\n      throw new Error(\n        `Trying to attach message handler before process started`,\n      );\n    }\n    this.process.on(`message`, callback);\n  }\n  offMessage(callback: (msg: any) => void): void {\n    if (!this.process) {\n      throw new Error(\n        `Trying to detach message handler before process started`,\n      );\n    }\n    this.process.off(`message`, callback);\n  }\n  onExit(\n    callback: (code: number | null, signal: NodeJS.Signals | null) => void,\n  ): void {\n    if (!this.process) {\n      throw new Error(`Trying to attach exit handler before process started`);\n    }\n    this.process.on(`exit`, callback);\n  }\n  offExit(\n    callback: (code: number | null, signal: NodeJS.Signals | null) => void,\n  ): void {\n    if (!this.process) {\n      throw new Error(`Trying to detach exit handler before process started`);\n    }\n    this.process.off(`exit`, callback);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  send(msg: any): void {\n    if (!this.process) {\n      throw new Error(`Trying to send a message before process started`);\n    }\n\n    this.process.send(msg);\n  }\n}\n\nlet isRestarting;\n\nexport const exampleImpl = async (program: IProgram): Promise<void> => {\n  global.__GATSBY = {\n    buildId: v4(),\n    root: program.directory,\n  };\n\n  // In some cases, port can actually be a string. But our codebase is expecting it to be a number.\n  // So we want to early just force it to a number to ensure we always act on a correct type.\n  program.port = parseInt(program.port + ``, 10);\n  const developProcessPath = slash(require.resolve(`./develop-process`));\n\n  try {\n    program.port = await detectPortInUseAndPrompt(program.port, program.host);\n  } catch (e) {\n    if (e.message === `USER_REJECTED`) {\n      process.exit(0);\n    }\n\n    throw e;\n  }\n\n  // Run the actual develop server on a random port, and the proxy on the program port\n  // which users will access\n  const debugInfo = getDebugInfo(program);\n\n  const developPort = program.port;\n\n  // In order to enable custom ssl, --cert-file --key-file and -https flags must all be\n  // used together\n  if ((program[`cert-file`] || program[`key-file`]) && !program.https) {\n    reporter.panic(\n      `for custom ssl --https, --cert-file, and --key-file must be used together`,\n    );\n  }\n\n  // Check if https is enabled, then create or get SSL cert.\n  // Certs are named 'devcert' and issued to the host.\n  // NOTE(@mxstbr): We mutate program.ssl _after_ passing it\n  // to the develop process controllable script above because\n  // that would mean we double SSL browser => proxy => server\n  if (program.https) {\n    const sslHost =\n      program.host === `0.0.0.0` || program.host === `::`\n        ? `localhost`\n        : program.host;\n\n    const ssl = await getSslCert({\n      name: sslHost,\n      caFile: program[`ca-file`],\n      certFile: program[`cert-file`],\n      keyFile: program[`key-file`],\n      directory: program.directory,\n    });\n\n    if (ssl) {\n      program.ssl = ssl;\n    }\n  }\n\n  const developProcess = new ControllableScript(\n    `\n    const cmd = require(${JSON.stringify(developProcessPath)});\n    const args = ${JSON.stringify({\n      ...program,\n      port: developPort,\n      // TODO(v5): remove\n      proxyPort: developPort,\n      debugInfo,\n    })};\n    cmd(args);\n  `,\n    debugInfo,\n  );\n\n  const handleChildProcessIPC = (msg): void => {\n    if (msg.type === `HEARTBEAT`) return;\n    if (process.send) {\n      // Forward IPC\n      process.send(msg);\n    }\n  };\n\n  developProcess.start();\n  developProcess.onMessage(handleChildProcessIPC);\n\n  // Plugins can call `process.exit` which would be sent to `develop-process` (child process)\n  // This needs to be propagated back to the parent process\n  developProcess.onExit(\n    (code: number | null, signal: NodeJS.Signals | null) => {\n      if (isRestarting) return;\n\n      if (signal !== null) {\n        process.kill(process.pid, signal);\n        return;\n      }\n\n      if (code !== null) {\n        process.exit(code);\n      }\n\n      // This should not happen:\n      // https://nodejs.org/api/child_process.html#child_process_event_exit\n      // The 'exit' event is emitted after the child process ends. If the process\n      // exited, code is the final exit code of the process, otherwise null.\n      // If the process terminated due to receipt of a signal, signal is the\n      // string name of the signal, otherwise null. One of the two will always be\n      // non - null.\n      //\n      // but just in case let do non-zero exit, because we are in situation\n      // we don't expect to be possible\n      process.exit(1);\n    },\n  );\n\n  // route ipc messaging to the original develop process\n  process.on(`message`, (msg) => {\n    developProcess.send(msg);\n  });\n\n  process.on(`SIGINT`, async () => {\n    await shutdownServices(\n      {\n        developProcess,\n      },\n      `SIGINT`,\n    );\n\n    process.exit(0);\n  });\n\n  process.on(`SIGTERM`, async () => {\n    await shutdownServices(\n      {\n        developProcess,\n      },\n      `SIGTERM`,\n    );\n\n    process.exit(0);\n  });\n\n  onExit((_code, signal) => {\n    shutdownServices(\n      {\n        developProcess,\n      },\n      signal as NodeJS.Signals,\n    );\n  });\n};\n\ninterface IShutdownServicesOptions {\n  developProcess: ControllableScript;\n}\n\nfunction shutdownServices(\n  { developProcess }: IShutdownServicesOptions,\n  signal: NodeJS.Signals,\n): Promise<void> {\n  const services = [developProcess.stop(signal)];\n\n  return Promise.all(services)\n    .catch(() => {})\n    .then(() => {});\n}\n"],"mappings":"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"}