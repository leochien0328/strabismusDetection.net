{"version":3,"file":"cache-lmdb.js","names":["_lmdb","require","fs","_interopRequireWildcard","path","_process$env$FORCE_TE","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","cacheDbFile","process","env","NODE_ENV","FORCE_TEST_DATABASE_ID","JEST_WORKER_ID","dbPath","join","cwd","getAlreadyOpenedStore","globalThis","__GATSBY_OPEN_ROOT_LMDBS","Map","GatsbyCacheLmdb","constructor","name","encoding","directory","init","ensureDirSync","getStore","rootDb","open","compression","maxDbs","getDb","db","openDB","value","put","del","remove","exports","resetCache","store","close","delete","emptyDir"],"sources":["../../src/utils/cache-lmdb.ts"],"sourcesContent":["import { open, RootDatabase, Database, DatabaseOptions } from \"lmdb\";\nimport * as fs from \"fs-extra\";\nimport * as path from \"path\";\n\n// Since the regular GatsbyCache saves to \"caches\" this should be \"caches-lmdb\"\nconst cacheDbFile =\n  process.env.NODE_ENV === `test`\n    ? `caches-lmdb-${\n        // FORCE_TEST_DATABASE_ID will be set if this gets executed in worker context\n        // when running jest tests. JEST_WORKER_ID will be set when this gets executed directly\n        // in test context (jest will use jest-worker internally).\n        process.env.FORCE_TEST_DATABASE_ID ?? process.env.JEST_WORKER_ID\n      }`\n    : `caches-lmdb`;\n\nconst dbPath = path.join(process.cwd(), `.cache/${cacheDbFile}`);\n\nfunction getAlreadyOpenedStore(): RootDatabase | undefined {\n  if (!globalThis.__GATSBY_OPEN_ROOT_LMDBS) {\n    globalThis.__GATSBY_OPEN_ROOT_LMDBS = new Map();\n  }\n  return globalThis.__GATSBY_OPEN_ROOT_LMDBS.get(dbPath);\n}\n\nexport default class GatsbyCacheLmdb {\n  private db: Database | undefined;\n  private encoding: DatabaseOptions[\"encoding\"];\n  public readonly name: string;\n  // Needed for plugins that want to write data to the cache directory\n  public readonly directory: string;\n  // TODO: remove `.cache` in v4. This is compat mode - cache-manager cache implementation\n  // expose internal cache that gives access to `.del` function that wasn't available in public\n  // cache interface (gatsby-plugin-sharp use it to clear no longer needed data)\n  public readonly cache: GatsbyCacheLmdb;\n\n  constructor({\n    name = `db`,\n    encoding = `json`,\n  }: {\n    name: string;\n    encoding?: DatabaseOptions[\"encoding\"];\n  }) {\n    this.name = name;\n    this.encoding = encoding;\n    this.directory = path.join(process.cwd(), `.cache/caches/${name}`);\n    this.cache = this;\n  }\n\n  init(): GatsbyCacheLmdb {\n    fs.ensureDirSync(this.directory);\n    return this;\n  }\n\n  private static getStore(): RootDatabase {\n    let rootDb = getAlreadyOpenedStore();\n    if (rootDb) {\n      return rootDb;\n    }\n\n    rootDb = open({\n      name: `root`,\n      path: dbPath,\n      compression: true,\n      maxDbs: 200,\n    });\n\n    globalThis.__GATSBY_OPEN_ROOT_LMDBS.set(dbPath, rootDb);\n\n    return rootDb;\n  }\n\n  private getDb(): Database {\n    if (!this.db) {\n      this.db = GatsbyCacheLmdb.getStore().openDB({\n        name: this.name,\n        encoding: this.encoding,\n      });\n    }\n    return this.db;\n  }\n\n  async get<T = unknown>(key): Promise<T | undefined> {\n    return this.getDb().get(key);\n  }\n\n  async set<T>(key: string, value: T): Promise<T | undefined> {\n    await this.getDb().put(key, value);\n    return value;\n  }\n\n  async del(key: string): Promise<void> {\n    return this.getDb().remove(key) as unknown as Promise<void>;\n  }\n}\n\nexport async function resetCache(): Promise<void> {\n  const store = getAlreadyOpenedStore();\n  if (store) {\n    await store.close();\n    globalThis.__GATSBY_OPEN_ROOT_LMDBS.delete(dbPath);\n  }\n\n  await fs.emptyDir(dbPath);\n}\n"],"mappings":";;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,EAAA,GAAAC,uBAAA,CAAAF,OAAA;AACA,IAAAG,IAAA,GAAAD,uBAAA,CAAAF,OAAA;AAA6B,IAAAI,qBAAA;AAAA,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAJ,wBAAAQ,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAE7B;AACA,MAAMW,WAAW,GACfC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAM,MAAK,GAC1B;AACC;AACA;AACA;AAAA,CAAA1B,qBAAA,GACAwB,OAAO,CAACC,GAAG,CAACE,sBAAsB,cAAA3B,qBAAA,cAAAA,qBAAA,GAAIwB,OAAO,CAACC,GAAG,CAACG,cACnD,EAAC,GACD,aAAY;AAEnB,MAAMC,MAAM,GAAG9B,IAAI,CAAC+B,IAAI,CAACN,OAAO,CAACO,GAAG,CAAC,CAAC,EAAG,UAASR,WAAY,EAAC,CAAC;AAEhE,SAASS,qBAAqBA,CAAA,EAA6B;EACzD,IAAI,CAACC,UAAU,CAACC,wBAAwB,EAAE;IACxCD,UAAU,CAACC,wBAAwB,GAAG,IAAIC,GAAG,CAAC,CAAC;EACjD;EACA,OAAOF,UAAU,CAACC,wBAAwB,CAACvB,GAAG,CAACkB,MAAM,CAAC;AACxD;AAEe,MAAMO,eAAe,CAAC;EAInC;;EAEA;EACA;EACA;EAGAC,WAAWA,CAAC;IACVC,IAAI,GAAI,IAAG;IACXC,QAAQ,GAAI;EAId,CAAC,EAAE;IACD,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,SAAS,GAAGzC,IAAI,CAAC+B,IAAI,CAACN,OAAO,CAACO,GAAG,CAAC,CAAC,EAAG,iBAAgBO,IAAK,EAAC,CAAC;IAClE,IAAI,CAAC7B,KAAK,GAAG,IAAI;EACnB;EAEAgC,IAAIA,CAAA,EAAoB;IACtB5C,EAAE,CAAC6C,aAAa,CAAC,IAAI,CAACF,SAAS,CAAC;IAChC,OAAO,IAAI;EACb;EAEA,OAAeG,QAAQA,CAAA,EAAiB;IACtC,IAAIC,MAAM,GAAGZ,qBAAqB,CAAC,CAAC;IACpC,IAAIY,MAAM,EAAE;MACV,OAAOA,MAAM;IACf;IAEAA,MAAM,GAAG,IAAAC,UAAI,EAAC;MACZP,IAAI,EAAG,MAAK;MACZvC,IAAI,EAAE8B,MAAM;MACZiB,WAAW,EAAE,IAAI;MACjBC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFd,UAAU,CAACC,wBAAwB,CAACZ,GAAG,CAACO,MAAM,EAAEe,MAAM,CAAC;IAEvD,OAAOA,MAAM;EACf;EAEQI,KAAKA,CAAA,EAAa;IACxB,IAAI,CAAC,IAAI,CAACC,EAAE,EAAE;MACZ,IAAI,CAACA,EAAE,GAAGb,eAAe,CAACO,QAAQ,CAAC,CAAC,CAACO,MAAM,CAAC;QAC1CZ,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC,CAAC;IACJ;IACA,OAAO,IAAI,CAACU,EAAE;EAChB;EAEA,MAAMtC,GAAGA,CAAcM,GAAG,EAA0B;IAClD,OAAO,IAAI,CAAC+B,KAAK,CAAC,CAAC,CAACrC,GAAG,CAACM,GAAG,CAAC;EAC9B;EAEA,MAAMK,GAAGA,CAAIL,GAAW,EAAEkC,KAAQ,EAA0B;IAC1D,MAAM,IAAI,CAACH,KAAK,CAAC,CAAC,CAACI,GAAG,CAACnC,GAAG,EAAEkC,KAAK,CAAC;IAClC,OAAOA,KAAK;EACd;EAEA,MAAME,GAAGA,CAACpC,GAAW,EAAiB;IACpC,OAAO,IAAI,CAAC+B,KAAK,CAAC,CAAC,CAACM,MAAM,CAACrC,GAAG,CAAC;EACjC;AACF;AAACsC,OAAA,CAAA/C,OAAA,GAAA4B,eAAA;AAEM,eAAeoB,UAAUA,CAAA,EAAkB;EAChD,MAAMC,KAAK,GAAGzB,qBAAqB,CAAC,CAAC;EACrC,IAAIyB,KAAK,EAAE;IACT,MAAMA,KAAK,CAACC,KAAK,CAAC,CAAC;IACnBzB,UAAU,CAACC,wBAAwB,CAACyB,MAAM,CAAC9B,MAAM,CAAC;EACpD;EAEA,MAAMhC,EAAE,CAAC+D,QAAQ,CAAC/B,MAAM,CAAC;AAC3B"}