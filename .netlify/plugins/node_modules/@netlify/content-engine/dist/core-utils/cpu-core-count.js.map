{"version":3,"file":"cpu-core-count.js","names":["_physicalCpuCount","require","cpuCoreCount","ignoreEnvVar","coreCount","getPhysicalCpuCount","process","env","GATSBY_CPU_COUNT","coreCountArg","Number","cpus","length","Error","err","exports"],"sources":["../../src/core-utils/cpu-core-count.ts"],"sourcesContent":["import { getPhysicalCpuCount } from \"./physical-cpu-count\";\n\n/**\n * Calculate CPU core count\n *\n * @param ignoreEnvVar Ignore the 'GATSBY_CPU_COUNT' env var to calculate the requested type of CPU cores\n * @return Count of the requested type of CPU cores. Defaults to number of physical cores or 1\n */\nexport const cpuCoreCount = (ignoreEnvVar?: boolean): number => {\n  try {\n    let coreCount = getPhysicalCpuCount() || 1;\n\n    if (ignoreEnvVar) {\n      // Return the physical CPU count,\n      // or default to 1 if we can't detect\n      return coreCount;\n    }\n\n    if (typeof process.env.GATSBY_CPU_COUNT !== `undefined`) {\n      const coreCountArg =\n        Number(process.env.GATSBY_CPU_COUNT) || process.env.GATSBY_CPU_COUNT;\n\n      switch (typeof coreCountArg) {\n        case `string`:\n          // Leave at Default CPU count if coreCountArg === `physical_cores`\n\n          // CPU count === logical CPU count\n          // throw error if we have a problem counting logical cores\n          if (coreCountArg === `logical_cores`) {\n            coreCount = require(`os`).cpus().length;\n\n            if (typeof coreCount !== `number`) {\n              throw new Error(\n                `process.env.GATSBY_CPU_COUNT is set to 'logical_cores' but there was a problem finding the number of logical cores`,\n              );\n            }\n          }\n          break;\n\n        case `number`:\n          // CPU count === passed in count\n          coreCount = coreCountArg;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return coreCount;\n  } catch (err) {\n    throw new Error(\n      `There has been a problem counting the number of CPU cores`,\n    );\n  }\n};\n"],"mappings":";;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,YAAY,GAAIC,YAAsB,IAAa;EAC9D,IAAI;IACF,IAAIC,SAAS,GAAG,IAAAC,qCAAmB,EAAC,CAAC,IAAI,CAAC;IAE1C,IAAIF,YAAY,EAAE;MAChB;MACA;MACA,OAAOC,SAAS;IAClB;IAEA,IAAI,OAAOE,OAAO,CAACC,GAAG,CAACC,gBAAgB,KAAM,WAAU,EAAE;MACvD,MAAMC,YAAY,GAChBC,MAAM,CAACJ,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAAC,IAAIF,OAAO,CAACC,GAAG,CAACC,gBAAgB;MAEtE,QAAQ,OAAOC,YAAY;QACzB,KAAM,QAAO;UACX;;UAEA;UACA;UACA,IAAIA,YAAY,KAAM,eAAc,EAAE;YACpCL,SAAS,GAAGH,OAAO,CAAE,IAAG,CAAC,CAACU,IAAI,CAAC,CAAC,CAACC,MAAM;YAEvC,IAAI,OAAOR,SAAS,KAAM,QAAO,EAAE;cACjC,MAAM,IAAIS,KAAK,CACZ,oHACH,CAAC;YACH;UACF;UACA;QAEF,KAAM,QAAO;UACX;UACAT,SAAS,GAAGK,YAAY;UACxB;QAEF;UACE;MACJ;IACF;IAEA,OAAOL,SAAS;EAClB,CAAC,CAAC,OAAOU,GAAG,EAAE;IACZ,MAAM,IAAID,KAAK,CACZ,2DACH,CAAC;EACH;AACF,CAAC;AAACE,OAAA,CAAAb,YAAA,GAAAA,YAAA"}