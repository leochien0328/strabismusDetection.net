{"version":3,"file":"get-storage.js","names":["_path","_interopRequireDefault","require","_lmdb","LockStatus","exports","databases","rootDb","getDatabaseDir","_global$__GATSBY$root","_global$__GATSBY","rootDir","global","__GATSBY","root","process","cwd","path","join","getStorage","fullDbPath","Error","globalThis","__GATSBY_OPEN_LMDBS","Map","get","lmdb","open","name","compression","sharedStructuresKey","Symbol","for","remoteFileInfo","openDB","mutex","set","closeDatabase","close","undefined"],"sources":["../../../src/core-utils/utils/get-storage.ts"],"sourcesContent":["import path from \"path\";\nimport lmdb from \"lmdb\";\nimport type { RootDatabase, Database } from \"lmdb\";\nimport type { Headers } from \"got\";\n\nexport enum LockStatus {\n  Locked = 0,\n  Unlocked = 1,\n}\n\ninterface ICoreUtilsDatabase {\n  remoteFileInfo: Database<\n    {\n      extension: string;\n      headers: Headers;\n      path: string;\n      directory: string;\n      cacheKey?: string;\n      buildId: string;\n    },\n    string\n  >;\n  mutex: Database<LockStatus, string>;\n}\n\nlet databases: ICoreUtilsDatabase | undefined;\nlet rootDb: RootDatabase;\n\nexport function getDatabaseDir(): string {\n  const rootDir = global.__GATSBY?.root ?? process.cwd();\n  return path.join(rootDir, `.cache`, `data`, `core-utils`);\n}\n\nexport function getStorage(fullDbPath: string): ICoreUtilsDatabase {\n  if (!databases) {\n    if (!fullDbPath) {\n      throw new Error(`LMDB path is not set!`);\n    }\n\n    // __GATSBY_OPEN_LMDBS tracks if we already opened given db in this process\n    // In `gatsby serve` case we might try to open it twice - once for engines\n    // and second to get access to `SitePage` nodes (to power trailing slashes\n    // redirect middleware). This ensure there is single instance within a process.\n    // Using more instances seems to cause weird random errors.\n    if (!globalThis.__GATSBY_OPEN_LMDBS) {\n      globalThis.__GATSBY_OPEN_LMDBS = new Map();\n    }\n\n    databases = globalThis.__GATSBY_OPEN_LMDBS.get(fullDbPath);\n\n    if (databases) {\n      return databases;\n    }\n\n    rootDb = lmdb.open({\n      name: `root`,\n      path: fullDbPath,\n      compression: true,\n      sharedStructuresKey: Symbol.for(`structures`),\n    });\n\n    databases = {\n      remoteFileInfo: rootDb.openDB({\n        name: `remote-file`,\n      }),\n      mutex: rootDb.openDB({\n        name: `mutex`,\n      }),\n    };\n\n    globalThis.__GATSBY_OPEN_LMDBS.set(fullDbPath, databases);\n  }\n\n  return databases as ICoreUtilsDatabase;\n}\n\nexport async function closeDatabase(): Promise<void> {\n  if (rootDb) {\n    await rootDb.close();\n    databases = undefined;\n  }\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAwB,IAIZE,UAAU,GAAAC,OAAA,CAAAD,UAAA,0BAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAoBtB,IAAIE,SAAyC;AAC7C,IAAIC,MAAoB;AAEjB,SAASC,cAAcA,CAAA,EAAW;EAAA,IAAAC,qBAAA,EAAAC,gBAAA;EACvC,MAAMC,OAAO,IAAAF,qBAAA,IAAAC,gBAAA,GAAGE,MAAM,CAACC,QAAQ,cAAAH,gBAAA,uBAAfA,gBAAA,CAAiBI,IAAI,cAAAL,qBAAA,cAAAA,qBAAA,GAAIM,OAAO,CAACC,GAAG,CAAC,CAAC;EACtD,OAAOC,aAAI,CAACC,IAAI,CAACP,OAAO,EAAG,QAAO,EAAG,MAAK,EAAG,YAAW,CAAC;AAC3D;AAEO,SAASQ,UAAUA,CAACC,UAAkB,EAAsB;EACjE,IAAI,CAACd,SAAS,EAAE;IACd,IAAI,CAACc,UAAU,EAAE;MACf,MAAM,IAAIC,KAAK,CAAE,uBAAsB,CAAC;IAC1C;;IAEA;IACA;IACA;IACA;IACA;IACA,IAAI,CAACC,UAAU,CAACC,mBAAmB,EAAE;MACnCD,UAAU,CAACC,mBAAmB,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC5C;IAEAlB,SAAS,GAAGgB,UAAU,CAACC,mBAAmB,CAACE,GAAG,CAACL,UAAU,CAAC;IAE1D,IAAId,SAAS,EAAE;MACb,OAAOA,SAAS;IAClB;IAEAC,MAAM,GAAGmB,aAAI,CAACC,IAAI,CAAC;MACjBC,IAAI,EAAG,MAAK;MACZX,IAAI,EAAEG,UAAU;MAChBS,WAAW,EAAE,IAAI;MACjBC,mBAAmB,EAAEC,MAAM,CAACC,GAAG,CAAE,YAAW;IAC9C,CAAC,CAAC;IAEF1B,SAAS,GAAG;MACV2B,cAAc,EAAE1B,MAAM,CAAC2B,MAAM,CAAC;QAC5BN,IAAI,EAAG;MACT,CAAC,CAAC;MACFO,KAAK,EAAE5B,MAAM,CAAC2B,MAAM,CAAC;QACnBN,IAAI,EAAG;MACT,CAAC;IACH,CAAC;IAEDN,UAAU,CAACC,mBAAmB,CAACa,GAAG,CAAChB,UAAU,EAAEd,SAAS,CAAC;EAC3D;EAEA,OAAOA,SAAS;AAClB;AAEO,eAAe+B,aAAaA,CAAA,EAAkB;EACnD,IAAI9B,MAAM,EAAE;IACV,MAAMA,MAAM,CAAC+B,KAAK,CAAC,CAAC;IACpBhC,SAAS,GAAGiC,SAAS;EACvB;AACF"}