{"version":3,"file":"types.js","names":["ActionCreators","_interopRequireWildcard","require","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set"],"sources":["../../src/reporter/types.ts"],"sourcesContent":["import * as ActionCreators from \"./redux/actions\";\n// TODO: This needs to be implemented when redux/acitons is converted to TS\nexport type CreateLogAction = any;\n\nexport type ErrorMeta =\n  | {\n      id: string;\n      error?: Error;\n      context: Record<string, any>;\n      [id: string]: any;\n    }\n  | string\n  | Error\n  | Array<ErrorMeta>;\n\nexport interface ILogIntent {\n  type: \"LOG_INTENT\";\n  payload:\n    | {\n        name: \"createLog\";\n        args: Parameters<(typeof ActionCreators)[\"createLog\"]>;\n      }\n    | {\n        name: \"createPendingActivity\";\n        args: Parameters<(typeof ActionCreators)[\"createPendingActivity\"]>;\n      }\n    | {\n        name: \"setStatus\";\n        args: Parameters<(typeof ActionCreators)[\"setStatus\"]>;\n      }\n    | {\n        name: \"startActivity\";\n        args: Parameters<(typeof ActionCreators)[\"startActivity\"]>;\n      }\n    | {\n        name: \"endActivity\";\n        args: Parameters<(typeof ActionCreators)[\"endActivity\"]>;\n      }\n    | {\n        name: \"updateActivity\";\n        args: Parameters<(typeof ActionCreators)[\"updateActivity\"]>;\n      }\n    | {\n        name: \"setActivityErrored\";\n        args: Parameters<(typeof ActionCreators)[\"setActivityErrored\"]>;\n      }\n    | {\n        name: \"setActivityStatusText\";\n        args: Parameters<(typeof ActionCreators)[\"setActivityStatusText\"]>;\n      }\n    | {\n        name: \"setActivityTotal\";\n        args: Parameters<(typeof ActionCreators)[\"setActivityTotal\"]>;\n      }\n    | {\n        name: \"activityTick\";\n        args: Parameters<(typeof ActionCreators)[\"activityTick\"]>;\n      };\n}\n\ntype PageMode = \"SSG\" | \"DSG\" | \"SSR\";\n\ninterface IGatsbyPageComponent {\n  componentPath: string;\n  pages: Set<string>;\n  isSlice: boolean;\n}\ninterface IGatsbyPage {\n  mode: PageMode;\n}\ninterface IGatsbyFunction {\n  functionRoute: string;\n  originalAbsoluteFilePath: string;\n}\n\nexport interface IRenderPageArgs {\n  pages: Map<string, IGatsbyPage>;\n  components: Map<string, IGatsbyPageComponent>;\n  functions: Array<IGatsbyFunction>;\n  root: string;\n}\n\nexport type ReporterMessagesFromChild = ILogIntent;\n\nexport { ActionCreators };\n"],"mappings":";;;;AAAA,IAAAA,cAAA,GAAAC,uBAAA,CAAAC,OAAA;AAAkDC,OAAA,CAAAH,cAAA,GAAAA,cAAA;AAAA,SAAAI,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAJ,wBAAAQ,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA"}