{"version":3,"file":"normalize.js","names":["normalizePlugin","plugin","_plugin$options","resolve","options","plugins","normalizePlugins","map","normalizeConfig","config","exports"],"sources":["../../../../src/bootstrap/load-plugins/utils/normalize.ts"],"sourcesContent":["import { ISiteConfig, IRawSiteConfig } from \"../types\";\nimport { IPluginRefObject, PluginRef } from \"../../../plugin-utils/types\";\n\nexport function normalizePlugin(\n  plugin: IPluginRefObject | string,\n): IPluginRefObject {\n  if (typeof plugin === `string`) {\n    return {\n      resolve: plugin,\n      options: {},\n    };\n  }\n\n  if (plugin.options?.plugins) {\n    plugin.options = {\n      ...plugin.options,\n      plugins: normalizePlugins(plugin.options.plugins),\n    };\n  }\n\n  return plugin;\n}\n\nexport function normalizePlugins(\n  plugins?: Array<PluginRef>,\n): Array<IPluginRefObject> {\n  return (plugins || []).map(normalizePlugin);\n}\n\nexport const normalizeConfig = (config: IRawSiteConfig = {}): ISiteConfig => {\n  return {\n    ...config,\n    plugins: (config.plugins || []).map(normalizePlugin),\n  };\n};\n"],"mappings":";;;;;;AAGO,SAASA,eAAeA,CAC7BC,MAAiC,EACf;EAAA,IAAAC,eAAA;EAClB,IAAI,OAAOD,MAAM,KAAM,QAAO,EAAE;IAC9B,OAAO;MACLE,OAAO,EAAEF,MAAM;MACfG,OAAO,EAAE,CAAC;IACZ,CAAC;EACH;EAEA,KAAAF,eAAA,GAAID,MAAM,CAACG,OAAO,cAAAF,eAAA,eAAdA,eAAA,CAAgBG,OAAO,EAAE;IAC3BJ,MAAM,CAACG,OAAO,GAAG;MACf,GAAGH,MAAM,CAACG,OAAO;MACjBC,OAAO,EAAEC,gBAAgB,CAACL,MAAM,CAACG,OAAO,CAACC,OAAO;IAClD,CAAC;EACH;EAEA,OAAOJ,MAAM;AACf;AAEO,SAASK,gBAAgBA,CAC9BD,OAA0B,EACD;EACzB,OAAO,CAACA,OAAO,IAAI,EAAE,EAAEE,GAAG,CAACP,eAAe,CAAC;AAC7C;AAEO,MAAMQ,eAAe,GAAGA,CAACC,MAAsB,GAAG,CAAC,CAAC,KAAkB;EAC3E,OAAO;IACL,GAAGA,MAAM;IACTJ,OAAO,EAAE,CAACI,MAAM,CAACJ,OAAO,IAAI,EAAE,EAAEE,GAAG,CAACP,eAAe;EACrD,CAAC;AACH,CAAC;AAACU,OAAA,CAAAF,eAAA,GAAAA,eAAA"}