{"version":3,"file":"validate.js","names":["_nodeFs","_interopRequireDefault","require","_path","semver","_interopRequireWildcard","stringSimilarity","_reporter","_pluginUtils","_commonTags","_pkgDir","_resolveModuleExports","_getLatestApis","_resolvePlugin","_preferDefault","_importGatsbyPlugin","_resolveJsFilePath","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","version","gatsbyVersion","JSON","parse","fs","readFileSync","path","join","pkgDir","sync","__dirname","getGatsbyUpgradeVersion","entries","reduce","entry","api","gt","getBadExports","plugin","pluginAPIKeys","apis","badExports","concat","_difference2","map","e","exportName","pluginName","name","pluginVersion","getErrorContext","exportType","currentAPIs","latestAPIs","ex","gatsbyUpgradeVersion","errors","fixes","forEach","similarities","findBestMatch","isDefaultPlugin","message","push","bestMatch","rating","target","sourceMessage","length","filter","Boolean","handleBadExports","hasBadExports","keys","find","getLatestAPIs","_toPairs2","badItem","context","reporter","error","id","addModuleImportAndValidateOptions","rootDir","incErrors","value","modulePath","importedModule","maybeAddFileProtocol","pluginModule","preferDefault","module","subErrors","plugins","subPlugins","validatePluginsOptions","newPlugins","Promise","all","resolve","gatsbyNode","resolvedPlugin","resolvePlugin","importGatsbyPlugin","err","pluginOptionsSchema","subPluginPaths","Set","optionsSchema","Joi","extend","joi","type","base","array","items","alternatives","string","object","options","unknown","custom","arrayValue","helpers","schema","_flags","normalizedPath","state","index","Array","isArray","ancestors","Error","add","external","inc","args","$_setFlag","clone","configDir","parentDir","relative","isSchema","warn","_plugin$options","describe","append","warning","validateOptionsSchema","validationWarnings","details","stripIndent","size","from","ValidationError","validationErrors","validateConfigPluginsOptions","config","process","exit","collatePluginAPIs","flattenedPlugins","node","_plugin$resolvedCompi","nodeAPIs","pluginNodeExports","resolveModuleExports","resolvedCompiledGatsbyNode","mode","_intersection2","warnOnIncompatiblePeerDependency","packageJSON","gatsbyPeerDependency","_get2","satisfies","includePrerelease"],"sources":["../../../src/bootstrap/load-plugins/validate.ts"],"sourcesContent":["import fs from \"node:fs\";\nimport _ from \"lodash\";\nimport path from \"path\";\nimport * as semver from \"semver\";\nimport * as stringSimilarity from \"string-similarity\";\nimport reporter from \"../../reporter\";\nimport { validateOptionsSchema, Joi } from \"../../plugin-utils\";\nimport { IPluginRefObject } from \"../../plugin-utils/types\";\nimport { stripIndent } from \"common-tags\";\nimport pkgDir from \"pkg-dir\";\n// import { trackCli } from \"gatsby-telemetry\"\nimport { resolveModuleExports } from \"../resolve-module-exports\";\nimport { getLatestAPIs } from \"../../utils/get-latest-apis\";\nimport { GatsbyNode, PackageJson } from \"../../types\";\nimport {\n  IPluginInfo,\n  IFlattenedPlugin,\n  IPluginInfoOptions,\n  ISiteConfig,\n} from \"./types\";\nimport { resolvePlugin } from \"./resolve-plugin\";\nimport { preferDefault } from \"../prefer-default\";\nimport { importGatsbyPlugin } from \"../../utils/import-gatsby-plugin\";\nimport { maybeAddFileProtocol } from \"../resolve-js-file-path\";\n\nconst { version: gatsbyVersion } = JSON.parse(\n  fs.readFileSync(path.join(pkgDir.sync(__dirname)!, \"package.json\"), \"utf8\"),\n);\n\ninterface IApi {\n  version?: string;\n}\n\nexport interface IEntry {\n  exportName: string;\n  pluginName: string;\n  pluginVersion: string;\n  api?: IApi;\n}\n\nexport type ExportType = \"node\";\n\ntype IEntryMap = {\n  [exportType in ExportType]: Array<IEntry>;\n};\n\nexport type ICurrentAPIs = {\n  [exportType in ExportType]: Array<string>;\n};\n\nconst getGatsbyUpgradeVersion = (entries: ReadonlyArray<IEntry>): string =>\n  entries.reduce((version, entry) => {\n    if (entry.api && entry.api.version) {\n      return semver.gt(entry.api.version, version || `0.0.0`)\n        ? entry.api.version\n        : version;\n    }\n    return version;\n  }, ``);\n\n// Given a plugin object, an array of the API names it exports and an\n// array of valid API names, return an array of invalid API exports.\nfunction getBadExports(\n  plugin: IPluginInfo,\n  pluginAPIKeys: ReadonlyArray<string>,\n  apis: ReadonlyArray<string>,\n): Array<IEntry> {\n  let badExports: Array<IEntry> = [];\n  // Discover any exports from plugins which are not \"known\"\n  badExports = badExports.concat(\n    _.difference(pluginAPIKeys, apis).map((e) => {\n      return {\n        exportName: e,\n        pluginName: plugin.name,\n        pluginVersion: plugin.version,\n      };\n    }),\n  );\n  return badExports;\n}\n\nfunction getErrorContext(\n  badExports: Array<IEntry>,\n  exportType: ExportType,\n  currentAPIs: ICurrentAPIs,\n  latestAPIs: { [exportType in ExportType]: { [exportName: string]: IApi } },\n): {\n  errors: Array<string>;\n  entries: Array<IEntry>;\n  exportType: ExportType;\n  fixes: Array<string>;\n  sourceMessage: string;\n} {\n  const entries = badExports.map((ex) => {\n    return {\n      ...ex,\n      api: latestAPIs[exportType][ex.exportName],\n    };\n  });\n\n  const gatsbyUpgradeVersion = getGatsbyUpgradeVersion(entries);\n  const errors: Array<string> = [];\n  const fixes = gatsbyUpgradeVersion\n    ? [`npm install gatsby@^${gatsbyUpgradeVersion}`]\n    : [];\n\n  entries.forEach((entry) => {\n    const similarities = stringSimilarity.findBestMatch(\n      entry.exportName,\n      currentAPIs[exportType],\n    );\n    const isDefaultPlugin = entry.pluginName == `default-site-plugin`;\n\n    const message = entry.api\n      ? entry.api.version\n        ? `was introduced in gatsby@${entry.api.version}`\n        : `is not available in your version of Gatsby`\n      : `is not a known API`;\n\n    if (isDefaultPlugin) {\n      errors.push(\n        `- Your local gatsby-${exportType}.js is using the API \"${entry.exportName}\" which ${message}.`,\n      );\n    } else {\n      errors.push(\n        `- The plugin ${entry.pluginName}@${entry.pluginVersion} is using the API \"${entry.exportName}\" which ${message}.`,\n      );\n    }\n\n    if (similarities.bestMatch.rating > 0.5) {\n      fixes.push(\n        `Rename \"${entry.exportName}\" -> \"${similarities.bestMatch.target}\"`,\n      );\n    }\n  });\n\n  return {\n    errors,\n    entries,\n    exportType,\n    fixes,\n    sourceMessage: [\n      `Your plugins must export known APIs from their gatsby-node.js.`,\n    ]\n      .concat(errors)\n      .concat(\n        fixes.length > 0\n          ? [`\\n`, `Some of the following may help fix the error(s):`, ...fixes]\n          : [],\n      )\n      .filter(Boolean)\n      .join(`\\n`),\n  };\n}\n\nexport async function handleBadExports({\n  currentAPIs,\n  badExports,\n}: {\n  currentAPIs: ICurrentAPIs;\n  badExports: { [api in ExportType]: Array<IEntry> };\n}): Promise<void> {\n  const hasBadExports = Object.keys(badExports).find(\n    (api) => badExports[api].length > 0,\n  );\n  if (hasBadExports) {\n    const latestAPIs = await getLatestAPIs();\n    // Output error messages for all bad exports\n    _.toPairs(badExports).forEach((badItem) => {\n      const [exportType, entries] = badItem;\n      if (entries.length > 0) {\n        const context = getErrorContext(\n          entries,\n          exportType as keyof typeof badExports,\n          currentAPIs,\n          latestAPIs,\n        );\n        reporter.error({\n          id: `11329`,\n          context,\n        });\n      }\n    });\n  }\n}\n\nconst addModuleImportAndValidateOptions =\n  (rootDir: string, incErrors: (inc: number) => void) =>\n  async (value: Array<IPluginRefObject>): Promise<Array<IPluginRefObject>> => {\n    for (const plugin of value) {\n      if (plugin.modulePath) {\n        const importedModule = await import(\n          maybeAddFileProtocol(plugin.modulePath)\n        );\n        const pluginModule = preferDefault(importedModule);\n        plugin.module = pluginModule;\n      }\n    }\n\n    const { errors: subErrors, plugins: subPlugins } =\n      await validatePluginsOptions(value as Array<IPluginRefObject>, rootDir);\n\n    incErrors(subErrors);\n    return subPlugins;\n  };\n\nasync function validatePluginsOptions(\n  plugins: Array<IPluginRefObject>,\n  rootDir: string,\n): Promise<{\n  errors: number;\n  plugins: Array<IPluginRefObject>;\n}> {\n  let errors = 0;\n  const newPlugins = await Promise.all(\n    plugins.map(async (plugin) => {\n      if (\n        // @ts-ignore\n        plugin === `default-site-plugin` ||\n        plugin.resolve === `default-site-plugin`\n      ) {\n        return plugin;\n      }\n\n      let gatsbyNode;\n      try {\n        const resolvedPlugin = resolvePlugin(plugin, rootDir);\n        gatsbyNode = await importGatsbyPlugin(resolvedPlugin, `gatsby-node`);\n      } catch (err) {\n        gatsbyNode = {};\n      }\n\n      if (!gatsbyNode.pluginOptionsSchema) return plugin;\n\n      const subPluginPaths = new Set<string>();\n\n      let optionsSchema = (\n        gatsbyNode.pluginOptionsSchema as Exclude<\n          GatsbyNode[\"pluginOptionsSchema\"],\n          undefined\n        >\n      )({\n        Joi: Joi.extend((joi) => {\n          return {\n            type: `subPlugins`,\n            base: joi\n              .array()\n              .items(\n                joi.alternatives(\n                  joi.string(),\n                  joi.object({\n                    resolve: Joi.string(),\n                    options: Joi.object({}).unknown(true),\n                  }),\n                ),\n              )\n              .custom((arrayValue, helpers) => {\n                const entry = helpers.schema._flags.entry;\n                return arrayValue.map((value) => {\n                  if (typeof value === `string`) {\n                    value = { resolve: value };\n                  }\n\n                  try {\n                    const resolvedPlugin = resolvePlugin(value, rootDir);\n                    const modulePath = require.resolve(\n                      `${resolvedPlugin.resolve}${entry ? `/${entry}` : ``}`,\n                    );\n                    value.modulePath = modulePath;\n\n                    const normalizedPath = helpers.state.path\n                      .map((key, index) => {\n                        // if subplugin is part of an array - swap concrete index key with `[]`\n                        if (\n                          typeof key === `number` &&\n                          Array.isArray(\n                            helpers.state.ancestors[\n                              helpers.state.path.length - index - 1\n                            ],\n                          )\n                        ) {\n                          if (index !== helpers.state.path.length - 1) {\n                            throw new Error(\n                              `No support for arrays not at the end of path`,\n                            );\n                          }\n                          return `[]`;\n                        }\n\n                        return key;\n                      })\n                      .join(`.`);\n\n                    subPluginPaths.add(normalizedPath);\n                  } catch (err) {\n                    reporter.error(err);\n                  }\n\n                  return value;\n                });\n              }, `Gatsby specific subplugin validation`)\n              .default([])\n              .external(\n                addModuleImportAndValidateOptions(\n                  rootDir,\n                  (inc: number): void => {\n                    errors += inc;\n                  },\n                ),\n                `add module key to subplugin`,\n              ),\n            args: (schema: any, args: any): any => {\n              if (\n                args?.entry &&\n                schema &&\n                typeof schema === `object` &&\n                schema.$_setFlag\n              ) {\n                return schema.$_setFlag(`entry`, args.entry, { clone: true });\n              }\n              return schema;\n            },\n          };\n        }),\n      });\n\n      // If rootDir and plugin.parentDir are the same, i.e. if this is a plugin a user configured in their gatsby-config.js (and not a sub-theme that added it), this will be \"\"\n      // Otherwise, this will contain (and show) the relative path\n      const configDir =\n        (plugin.parentDir &&\n          rootDir &&\n          path.relative(rootDir, plugin.parentDir)) ||\n        null;\n\n      if (!Joi.isSchema(optionsSchema) || optionsSchema.type !== `object`) {\n        // Validate correct usage of pluginOptionsSchema\n        reporter.warn(\n          `Plugin \"${plugin.resolve}\" has an invalid options schema so we cannot verify your configuration for it.`,\n        );\n        return plugin;\n      }\n\n      try {\n        if (!optionsSchema.describe().keys.plugins) {\n          // All plugins have \"plugins: []\"\" added to their options in load.ts, even if they\n          // do not have subplugins. We add plugins to the schema if it does not exist already\n          // to make sure they pass validation.\n          optionsSchema = optionsSchema.append({\n            plugins: Joi.array().length(0),\n          });\n        }\n\n        const { value, warning } = await validateOptionsSchema(\n          optionsSchema,\n          (plugin.options as IPluginInfoOptions) || {},\n        );\n\n        plugin.options = value;\n\n        // Handle unknown key warnings\n        const validationWarnings = warning?.details;\n\n        if (validationWarnings?.length > 0) {\n          reporter.warn(\n            stripIndent(`\n        Warning: there are unknown plugin options for \"${plugin.resolve}\"${\n          configDir ? `, configured by ${configDir}` : ``\n        }: ${validationWarnings.map((error) => error.path.join(`.`)).join(`, `)}\n        Please open an issue at https://ghub.io/${\n          plugin.resolve\n        } if you believe this option is valid.\n      `),\n          );\n          // trackCli(`UNKNOWN_PLUGIN_OPTION`, {\n          //   name: plugin.resolve,\n          //   valueString: validationWarnings\n          //     .map(error => error.path.join(`.`))\n          //     .join(`, `),\n          // })\n          // We do not increment errors++ here as we do not want to process.exit if there are only warnings\n        }\n\n        // Validate subplugins if they weren't handled already\n        if (!subPluginPaths.has(`plugins`) && plugin.options?.plugins) {\n          const { errors: subErrors, plugins: subPlugins } =\n            await validatePluginsOptions(\n              plugin.options.plugins as Array<IPluginRefObject>,\n              rootDir,\n            );\n          plugin.options.plugins = subPlugins;\n          if (subPlugins.length > 0) {\n            subPluginPaths.add(`plugins`);\n          }\n          errors += subErrors;\n        }\n        if (subPluginPaths.size > 0) {\n          plugin.subPluginPaths = Array.from(subPluginPaths);\n        }\n      } catch (error) {\n        if (error instanceof Joi.ValidationError) {\n          const validationErrors = error.details;\n          if (validationErrors.length > 0) {\n            reporter.error({\n              id: `11331`,\n              context: {\n                configDir,\n                validationErrors,\n                pluginName: plugin.resolve,\n              },\n            });\n            errors++;\n          }\n          return plugin;\n        }\n\n        throw error;\n      }\n\n      return plugin;\n    }),\n  );\n  return { errors, plugins: newPlugins };\n}\n\nexport async function validateConfigPluginsOptions(\n  config: ISiteConfig = {},\n  rootDir: string,\n): Promise<void> {\n  if (!config.plugins) return;\n\n  const { errors, plugins } = await validatePluginsOptions(\n    config.plugins,\n    rootDir,\n  );\n\n  config.plugins = plugins;\n\n  if (errors > 0) {\n    process.exit(1);\n  }\n}\n\n/**\n * Identify which APIs each plugin exports\n */\nexport async function collatePluginAPIs({\n  currentAPIs,\n  flattenedPlugins,\n  rootDir,\n}: {\n  currentAPIs: ICurrentAPIs;\n  flattenedPlugins: Array<IPluginInfo & Partial<IFlattenedPlugin>>;\n  rootDir?: string;\n}): Promise<{\n  flattenedPlugins: Array<IFlattenedPlugin>;\n  badExports: IEntryMap;\n}> {\n  // Get a list of bad exports\n  const badExports: IEntryMap = {\n    node: [],\n  };\n\n  for (const plugin of flattenedPlugins) {\n    plugin.nodeAPIs = [];\n\n    // Discover which APIs this plugin implements and store an array against\n    // the plugin node itself *and* in an API to plugins map for faster lookups\n    // later.\n    const pluginNodeExports = await resolveModuleExports(\n      plugin.resolvedCompiledGatsbyNode ?? `${plugin.resolve}/gatsby-node`,\n      {\n        mode: `import`,\n        rootDir,\n      },\n    );\n\n    if (pluginNodeExports.length > 0) {\n      plugin.nodeAPIs = _.intersection(pluginNodeExports, currentAPIs.node);\n      badExports.node = badExports.node.concat(\n        getBadExports(plugin, pluginNodeExports, currentAPIs.node),\n      ); // Collate any bad exports\n    }\n  }\n\n  return {\n    flattenedPlugins: flattenedPlugins as Array<IFlattenedPlugin>,\n    badExports,\n  };\n}\n\nexport function warnOnIncompatiblePeerDependency(\n  name: string,\n  packageJSON: PackageJson,\n): void {\n  // Note: In the future the peer dependency should be enforced for all plugins.\n  const gatsbyPeerDependency = _.get(packageJSON, [\n    \"peerDependencies\",\n    \"@netlify/content-engine\",\n  ]);\n  if (\n    gatsbyPeerDependency &&\n    !semver.satisfies(gatsbyVersion, gatsbyPeerDependency, {\n      includePrerelease: true,\n    })\n  ) {\n    reporter.warn(\n      `Plugin ${name} is not compatible with your gatsby version ${gatsbyVersion} - It requires @netlify/content-engine@${gatsbyPeerDependency}`,\n    );\n  }\n}\n"],"mappings":"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"}