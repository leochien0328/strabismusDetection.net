{"version":3,"file":"resolve-plugin.js","names":["_path","_interopRequireDefault","require","_fs","_path2","_createRequireFromPath","_validate","_createId","_createHash","_reporter","_checkLocalPlugin","resolvePlugin","plugin","rootDir","pluginName","_isString2","default","resolve","validLocalPlugin","localPluginPath","checkLocalPlugin","packageJSON","JSON","parse","fs","readFileSync","name","warnOnIncompatiblePeerDependency","id","createPluginId","version","createFileContentHash","requireSource","createRequireFromPath","resolvedPath","slash","path","dirname","isAbsolute","err","reporter","panicOnBuild","Error"],"sources":["../../../src/bootstrap/load-plugins/resolve-plugin.ts"],"sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\nimport { slash } from \"../../core-utils/path\";\nimport { createRequireFromPath } from \"../../core-utils/create-require-from-path\";\nimport { warnOnIncompatiblePeerDependency } from \"./validate\";\nimport { PackageJson } from \"../../types\";\nimport { IPluginInfo, PluginRef } from \"./types\";\nimport { createPluginId } from \"./utils/create-id\";\nimport { createFileContentHash } from \"./utils/create-hash\";\nimport reporter from \"../../reporter\";\nimport { isString } from \"lodash\";\nimport { checkLocalPlugin } from \"./utils/check-local-plugin\";\n\n/**\n * @param plugin\n * This should be a plugin spec object where possible but can also be the\n * name of a plugin.\n *\n * When it is a name, it can be a name of a local plugin, the name of a plugin\n * located in node_modules, or a Gatsby internal plugin. In the last case the\n * plugin will be an absolute path.\n * @param rootDir\n * This is the project location, from which are found the plugins\n */\nexport function resolvePlugin(plugin: PluginRef, rootDir: string): IPluginInfo {\n  const pluginName = isString(plugin) ? plugin : plugin.resolve;\n\n  // Handle local plugins\n  const { validLocalPlugin, localPluginPath = `` } = checkLocalPlugin(\n    plugin,\n    rootDir,\n  );\n\n  if (validLocalPlugin && localPluginPath) {\n    const packageJSON = JSON.parse(\n      fs.readFileSync(`${localPluginPath}/package.json`, `utf-8`),\n    ) as PackageJson;\n    const name = packageJSON.name || pluginName;\n    warnOnIncompatiblePeerDependency(name, packageJSON);\n\n    return {\n      resolve: localPluginPath,\n      name,\n      id: createPluginId(name),\n      version:\n        packageJSON?.version || createFileContentHash(localPluginPath, `**`),\n    };\n  }\n\n  /**\n   * Here we have an absolute path to an internal plugin, or a name of a module\n   * which should be located in node_modules.\n   */\n  try {\n    const requireSource =\n      rootDir !== null\n        ? createRequireFromPath(`${rootDir}/:internal:`)\n        : require;\n\n    // If the path is absolute, resolve the directory of the internal plugin,\n    // otherwise resolve the directory containing the package.json\n    const resolvedPath = slash(\n      path.dirname(\n        requireSource.resolve(\n          path.isAbsolute(pluginName)\n            ? pluginName\n            : `${pluginName}/package.json`,\n        ),\n      ),\n    );\n\n    const packageJSON = JSON.parse(\n      fs.readFileSync(`${resolvedPath}/package.json`, `utf-8`),\n    );\n    warnOnIncompatiblePeerDependency(packageJSON.name, packageJSON);\n\n    return {\n      resolve: resolvedPath,\n      id: createPluginId(packageJSON.name),\n      name: packageJSON.name,\n      version: packageJSON.version,\n    };\n  } catch (err) {\n    reporter.panicOnBuild(\n      `plugin \"${pluginName} threw the following error. Perhaps you need to install its package?\\n\\n`,\n      err,\n    );\n\n    throw new Error(`unreachable`);\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,GAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,sBAAA,GAAAH,OAAA;AACA,IAAAI,SAAA,GAAAJ,OAAA;AAGA,IAAAK,SAAA,GAAAL,OAAA;AACA,IAAAM,WAAA,GAAAN,OAAA;AACA,IAAAO,SAAA,GAAAR,sBAAA,CAAAC,OAAA;AAEA,IAAAQ,iBAAA,GAAAR,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,aAAaA,CAACC,MAAiB,EAAEC,OAAe,EAAe;EAC7E,MAAMC,UAAU,GAAG,IAAAC,UAAA,CAAAC,OAAA,EAASJ,MAAM,CAAC,GAAGA,MAAM,GAAGA,MAAM,CAACK,OAAO;;EAE7D;EACA,MAAM;IAAEC,gBAAgB;IAAEC,eAAe,GAAI;EAAE,CAAC,GAAG,IAAAC,kCAAgB,EACjER,MAAM,EACNC,OACF,CAAC;EAED,IAAIK,gBAAgB,IAAIC,eAAe,EAAE;IACvC,MAAME,WAAW,GAAGC,IAAI,CAACC,KAAK,CAC5BC,WAAE,CAACC,YAAY,CAAE,GAAEN,eAAgB,eAAc,EAAG,OAAM,CAC5D,CAAgB;IAChB,MAAMO,IAAI,GAAGL,WAAW,CAACK,IAAI,IAAIZ,UAAU;IAC3C,IAAAa,0CAAgC,EAACD,IAAI,EAAEL,WAAW,CAAC;IAEnD,OAAO;MACLJ,OAAO,EAAEE,eAAe;MACxBO,IAAI;MACJE,EAAE,EAAE,IAAAC,wBAAc,EAACH,IAAI,CAAC;MACxBI,OAAO,EACL,CAAAT,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAES,OAAO,KAAI,IAAAC,iCAAqB,EAACZ,eAAe,EAAG,IAAG;IACvE,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACE,IAAI;IACF,MAAMa,aAAa,GACjBnB,OAAO,KAAK,IAAI,GACZ,IAAAoB,4CAAqB,EAAE,GAAEpB,OAAQ,aAAY,CAAC,GAC9CX,OAAO;;IAEb;IACA;IACA,MAAMgC,YAAY,GAAG,IAAAC,YAAK,EACxBC,aAAI,CAACC,OAAO,CACVL,aAAa,CAACf,OAAO,CACnBmB,aAAI,CAACE,UAAU,CAACxB,UAAU,CAAC,GACvBA,UAAU,GACT,GAAEA,UAAW,eACpB,CACF,CACF,CAAC;IAED,MAAMO,WAAW,GAAGC,IAAI,CAACC,KAAK,CAC5BC,WAAE,CAACC,YAAY,CAAE,GAAES,YAAa,eAAc,EAAG,OAAM,CACzD,CAAC;IACD,IAAAP,0CAAgC,EAACN,WAAW,CAACK,IAAI,EAAEL,WAAW,CAAC;IAE/D,OAAO;MACLJ,OAAO,EAAEiB,YAAY;MACrBN,EAAE,EAAE,IAAAC,wBAAc,EAACR,WAAW,CAACK,IAAI,CAAC;MACpCA,IAAI,EAAEL,WAAW,CAACK,IAAI;MACtBI,OAAO,EAAET,WAAW,CAACS;IACvB,CAAC;EACH,CAAC,CAAC,OAAOS,GAAG,EAAE;IACZC,iBAAQ,CAACC,YAAY,CAClB,WAAU3B,UAAW,0EAAyE,EAC/FyB,GACF,CAAC;IAED,MAAM,IAAIG,KAAK,CAAE,aAAY,CAAC;EAChC;AACF"}