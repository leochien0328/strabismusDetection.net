{"version":3,"file":"setup-datastore.js","names":["_lmdbDatastore","require","_redux","setupLmdbStore","dbPath","dataStore","getLmdbStore","replaceReducer","nodes","state","Map","action","type","nodesByType","emitter","on","_dataStore$updateData","updateDataStore","call"],"sources":["../../../src/datastore/lmdb/setup-datastore.ts"],"sourcesContent":["import { IDataStore } from \"../types\";\nimport { getLmdbStore } from \"./lmdb-datastore\";\nimport { emitter, replaceReducer } from \"../../redux\";\n\nexport function setupLmdbStore({\n  dbPath,\n}: { dbPath?: string } = {}): IDataStore {\n  const dataStore = getLmdbStore({ dbPath });\n  replaceReducer({\n    nodes: (state = new Map(), action) =>\n      action.type === `DELETE_CACHE` ? new Map() : state,\n    nodesByType: (state = new Map(), action) =>\n      action.type === `DELETE_CACHE` ? new Map() : state,\n  });\n  emitter.on(`*`, (action) => {\n    if (action) {\n      dataStore.updateDataStore?.(action);\n    }\n  });\n  return dataStore;\n}\n"],"mappings":";;;;AACA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEO,SAASE,cAAcA,CAAC;EAC7BC;AACmB,CAAC,GAAG,CAAC,CAAC,EAAc;EACvC,MAAMC,SAAS,GAAG,IAAAC,2BAAY,EAAC;IAAEF;EAAO,CAAC,CAAC;EAC1C,IAAAG,qBAAc,EAAC;IACbC,KAAK,EAAEA,CAACC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC,EAAEC,MAAM,KAC/BA,MAAM,CAACC,IAAI,KAAM,cAAa,GAAG,IAAIF,GAAG,CAAC,CAAC,GAAGD,KAAK;IACpDI,WAAW,EAAEA,CAACJ,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC,EAAEC,MAAM,KACrCA,MAAM,CAACC,IAAI,KAAM,cAAa,GAAG,IAAIF,GAAG,CAAC,CAAC,GAAGD;EACjD,CAAC,CAAC;EACFK,cAAO,CAACC,EAAE,CAAE,GAAE,EAAGJ,MAAM,IAAK;IAC1B,IAAIA,MAAM,EAAE;MAAA,IAAAK,qBAAA;MACV,CAAAA,qBAAA,GAAAX,SAAS,CAACY,eAAe,cAAAD,qBAAA,uBAAzBA,qBAAA,CAAAE,IAAA,CAAAb,SAAS,EAAmBM,MAAM,CAAC;IACrC;EACF,CAAC,CAAC;EACF,OAAON,SAAS;AAClB"}