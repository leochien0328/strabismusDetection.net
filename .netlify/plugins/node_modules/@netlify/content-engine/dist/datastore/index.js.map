{"version":3,"file":"index.js","names":["_datastore","require","exports","getDataStore","getNodes","getNode","id","getNodesByType","type","getTypes"],"sources":["../../src/datastore/index.ts"],"sourcesContent":["import { IGatsbyNode } from \"../redux/types\";\nimport { getDataStore } from \"./datastore\";\n\nexport { getDataStore } from \"./datastore\";\n\n// Convenience accessor methods\n\n/**\n * Get all nodes from datastore.\n * @deprecated\n */\nexport const getNodes = (): Array<IGatsbyNode> => getDataStore().getNodes();\n\n/**\n * Get node by id from datastore.\n */\nexport const getNode = (id: string): IGatsbyNode | undefined =>\n  getDataStore().getNode(id);\n\n/**\n * Get all nodes of type from datastore.\n * @deprecated\n */\nexport const getNodesByType = (type: string): Array<IGatsbyNode> =>\n  getDataStore().getNodesByType(type);\n\n/**\n * Get all type names from datastore.\n */\nexport const getTypes = (): Array<string> => getDataStore().getTypes();\n"],"mappings":";;;;AACA,IAAAA,UAAA,GAAAC,OAAA;AAA2CC,OAAA,CAAAC,YAAA,GAAAH,UAAA,CAAAG,YAAA;AAI3C;;AAEA;AACA;AACA;AACA;AACO,MAAMC,QAAQ,GAAGA,CAAA,KAA0B,IAAAD,uBAAY,EAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;;AAE3E;AACA;AACA;AAFAF,OAAA,CAAAE,QAAA,GAAAA,QAAA;AAGO,MAAMC,OAAO,GAAIC,EAAU,IAChC,IAAAH,uBAAY,EAAC,CAAC,CAACE,OAAO,CAACC,EAAE,CAAC;;AAE5B;AACA;AACA;AACA;AAHAJ,OAAA,CAAAG,OAAA,GAAAA,OAAA;AAIO,MAAME,cAAc,GAAIC,IAAY,IACzC,IAAAL,uBAAY,EAAC,CAAC,CAACI,cAAc,CAACC,IAAI,CAAC;;AAErC;AACA;AACA;AAFAN,OAAA,CAAAK,cAAA,GAAAA,cAAA;AAGO,MAAME,QAAQ,GAAGA,CAAA,KAAqB,IAAAN,uBAAY,EAAC,CAAC,CAACM,QAAQ,CAAC,CAAC;AAACP,OAAA,CAAAO,QAAA,GAAAA,QAAA"}