{"version":3,"file":"initialize.js","names":["_coreUtils","require","fs","_interopRequireWildcard","_mutex","_globby","_interopRequireDefault","_apiRunnerNode","_pluginRunner","_redux","_reporter","_removeStaleJobs","_loadConfig","_loadPlugins","_detectNodeMutations","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","process","on","reason","reporter","panic","initialize","program","args","parentSpan","engineConfig","_registerAdditionalDiagnosticOutputHandler","logPendingJobs","outputs","job","store","getState","jobsV2","incomplete","push","length","size","JSON","stringify","directory","slash","extensions","dispatch","type","payload","activityForJobs","emitter","phantomActivity","start","onEndJob","jobs","active","end","siteDirectory","activity","activityTimer","config","loadConfig","processFlags","providedConfig","flattenedPlugins","loadPlugins","env","GATSBY_DETECT_NODE_MUTATIONS","enableNodeMutationsDetection","removeStaleJobs","startPluginRunner","apiRunnerNode","span","lmdbCacheDirectoryName","cacheDirectory","pluginVersions","map","p","version","optionalFiles","state","hashes","Promise","all","md5File","concat","f","catch","pluginsHash","md5","oldPluginsHash","status","PLUGINS_HASH","info","stripIndent","deleteGlobs","GATSBY_EXPERIMENTAL_PRESERVE_FILE_DOWNLOAD_CACHE","files","glob","cwd","file","remove","e","error","cacheIsCorrupt","releaseAllMutexes","ensureDir","err","apiResults","traceId","_flattenDeep2","initialWebhookBody","undefined","GATSBY_INITIAL_WEBHOOK_BODY","parse","message","webhookBody"],"sources":["../../src/services/initialize.ts"],"sourcesContent":["import _ from \"lodash\";\nimport { slash } from \"../core-utils\";\nimport * as fs from \"fs-extra\";\nimport { releaseAllMutexes } from \"../core-utils/mutex\";\nimport { md5, md5File } from \"../core-utils\";\n// import telemetry from \"gatsby-telemetry\"\nimport glob from \"globby\";\n\nimport apiRunnerNode from \"../utils/api-runner-node\";\nimport { Store, AnyAction } from \"redux\";\nimport { startPluginRunner } from \"../redux/plugin-runner\";\nimport { store, emitter } from \"../redux\";\nimport reporter from \"../reporter\";\nimport { removeStaleJobs } from \"../bootstrap/remove-stale-jobs\";\nimport { IGatsbyState, IStateProgram } from \"../redux/types\";\nimport { IBuildContext } from \"./types\";\nimport { loadConfig } from \"../bootstrap/load-config\";\nimport { loadPlugins } from \"../bootstrap/load-plugins\";\nimport type { InternalJob } from \"../utils/jobs/types\";\nimport { enableNodeMutationsDetection } from \"../utils/detect-node-mutations\";\nimport { IDataLayerContext } from \"./types\";\nimport { GatsbyConfig } from \"../types\";\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason: unknown) => {\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33636\n  reporter.panic((reason as Error) || `Unhandled rejection`);\n});\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// require(`../bootstrap/log-line-function`)\n\ntype WebhookBody = IDataLayerContext[\"webhookBody\"];\n\nexport async function initialize({\n  program: args,\n  parentSpan,\n  engineConfig,\n}: IBuildContext & {\n  engineConfig?: GatsbyConfig;\n}): Promise<{\n  store: Store<IGatsbyState, AnyAction>;\n  webhookBody?: WebhookBody;\n}> {\n  if (!args) {\n    reporter.panic(`Missing program args`);\n  }\n\n  if (reporter._registerAdditionalDiagnosticOutputHandler) {\n    reporter._registerAdditionalDiagnosticOutputHandler(\n      function logPendingJobs(): string {\n        const outputs: Array<InternalJob> = [];\n\n        for (const [, { job }] of store.getState().jobsV2.incomplete) {\n          outputs.push(job);\n          if (outputs.length >= 5) {\n            // 5 not finished jobs should be enough to track down issues\n            // this is just limiting output \"spam\"\n            break;\n          }\n        }\n\n        return outputs.length\n          ? `Unfinished jobs (showing ${outputs.length} of ${\n              store.getState().jobsV2.incomplete.size\n            } jobs total):\\n\\n` + JSON.stringify(outputs, null, 2)\n          : ``;\n      },\n    );\n  }\n\n  const directory = slash(args.directory);\n\n  const program: IStateProgram = {\n    ...args,\n    extensions: [],\n    // Fix program directory path for windows env.\n    directory,\n  };\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  });\n\n  let activityForJobs;\n\n  emitter.on(`CREATE_JOB`, () => {\n    if (!activityForJobs) {\n      activityForJobs = reporter.phantomActivity(`Running jobs`);\n      activityForJobs.start();\n    }\n  });\n\n  const onEndJob = (): void => {\n    if (activityForJobs && store.getState().jobs.active.length === 0) {\n      activityForJobs.end();\n      activityForJobs = null;\n    }\n  };\n\n  emitter.on(`END_JOB`, onEndJob);\n\n  const siteDirectory = program.directory;\n\n  const activity = reporter.activityTimer(`Loading plugins`);\n  activity.start();\n\n  const config = await loadConfig({\n    siteDirectory,\n    processFlags: true,\n    providedConfig: engineConfig,\n  });\n  const flattenedPlugins = await loadPlugins(config, siteDirectory);\n\n  if (process.env.GATSBY_DETECT_NODE_MUTATIONS) {\n    enableNodeMutationsDetection();\n  }\n\n  // run stale jobs\n  // @ts-ignore we'll need to fix redux typings https://redux.js.org/usage/usage-with-typescript\n  store.dispatch(removeStaleJobs(store.getState().jobsV2));\n\n  // Multiple occurrences of the same name-version-pair can occur,\n  // so we report an array of unique pairs\n  // const pluginsStr = _.uniq(flattenedPlugins.map(p => `${p.name}@${p.version}`))\n  // telemetry.decorateEvent(`BUILD_END`, {\n  //   plugins: pluginsStr,\n  // })\n\n  // telemetry.decorateEvent(`DEVELOP_STOP`, {\n  //   plugins: pluginsStr,\n  // })\n\n  // Start plugin runner which listens to the store\n  // and invokes Gatsby API based on actions.\n  startPluginRunner();\n\n  await apiRunnerNode(`onPreInit`, { parentSpan: activity.span });\n\n  const lmdbCacheDirectoryName = `caches-lmdb`;\n\n  const cacheDirectory = `${program.directory}/.cache`;\n\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map((p) => p.version);\n  // we should include gatsby version as well\n  pluginVersions.push(require(`../../package.json`).version);\n  const optionalFiles = [\n    `${program.directory}/gatsby-node.js`,\n    `${program.directory}/gatsby-node.ts`,\n  ] as Array<string>;\n\n  const state = store.getState();\n\n  const hashes = await Promise.all(\n    // Ignore optional files with .catch() as these are not required\n    [md5File(`package.json`)].concat(\n      optionalFiles.map((f) => md5File(f).catch(() => ``)),\n    ),\n  );\n\n  const pluginsHash = await md5(JSON.stringify(pluginVersions.concat(hashes)));\n\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``;\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    reporter.info(reporter.stripIndent`\n      One or more of your plugins have changed since the last time you ran Content Engine. As\n      a precaution, we're deleting your site's cache to ensure there's no stale data.\n    `);\n  }\n\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    try {\n      const deleteGlobs = [\n        // By default delete all files & subdirectories\n        `.cache/**`,\n        `.cache/data/**`,\n        `!.cache/data/core-utils/**`,\n        `!.cache/compiled`,\n      ];\n\n      if (process.env.GATSBY_EXPERIMENTAL_PRESERVE_FILE_DOWNLOAD_CACHE) {\n        // Stop the caches directory from being deleted, add all sub directories,\n        // but remove gatsby-source-filesystem\n        deleteGlobs.push(`!.cache/caches`);\n        deleteGlobs.push(`.cache/caches/*`);\n        deleteGlobs.push(`!.cache/caches/gatsby-source-filesystem`);\n      }\n\n      const files = await glob(deleteGlobs, {\n        cwd: program.directory,\n      });\n\n      await Promise.all(files.map((file) => fs.remove(file)));\n    } catch (e) {\n      reporter.error(`Failed to remove .cache files.`, e);\n    }\n\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n      cacheIsCorrupt: false,\n    });\n\n    // make sure all previous mutexes are released\n    await releaseAllMutexes();\n\n    // in future this should show which plugin's caches are purged\n    // possibly should also have which plugins had caches\n    // telemetry.decorateEvent(`BUILD_END`, {\n    //   pluginCachesPurged: [`*`],\n    // })\n    // telemetry.decorateEvent(`DEVELOP_STOP`, {\n    //   pluginCachesPurged: [`*`],\n    // })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  });\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  await fs.ensureDir(cacheDirectory);\n\n  // Init plugins once cache is initialized\n  await apiRunnerNode(`onPluginInit`, {\n    parentSpan: activity.span,\n  });\n\n  try {\n    await fs.ensureDir(`${cacheDirectory}/${lmdbCacheDirectoryName}`);\n  } catch (err) {\n    reporter.panic(`Unable to copy site files to .cache`, err);\n  }\n\n  /**\n   * Start the main bootstrap processes.\n   */\n  await apiRunnerNode(`onPreBootstrap`, {\n    parentSpan: activity.span,\n  });\n  activity.end();\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.mjs`, `.js`, `.jsx`, `.wasm`, `.json`];\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n    parentSpan,\n  });\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  });\n\n  // const siteDirectoryFiles = await fs.readdir(siteDirectory)\n\n  // const gatsbyFilesIsInESM = siteDirectoryFiles.some(file =>\n  //   file.match(/gatsby-(node|config)\\.mjs/)\n  // )\n\n  // if (gatsbyFilesIsInESM) {\n  //   telemetry.trackFeatureIsUsed(`ESMInGatsbyFiles`)\n  // }\n\n  let initialWebhookBody: WebhookBody = undefined;\n\n  if (process.env.GATSBY_INITIAL_WEBHOOK_BODY) {\n    try {\n      initialWebhookBody = JSON.parse(process.env.GATSBY_INITIAL_WEBHOOK_BODY);\n    } catch (e) {\n      reporter.error(\n        `Failed to parse GATSBY_INITIAL_WEBHOOK_BODY as JSON:\\n\"${e.message}\"`,\n      );\n    }\n  }\n\n  return {\n    store,\n    webhookBody: initialWebhookBody,\n  };\n}\n"],"mappings":"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"}