{"version":3,"file":"transform-document.js","names":["graphql","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","extractEnumValues","value","acc","hasValue","kind","Kind","ENUM","push","LIST","listItem","values","undefined","isOldSortObject","props","Array","isArray","hasFields","entries","pathSegmentsToAst","path","split","reduceRight","previousNode","fieldPathSegment","OBJECT","fields","OBJECT_FIELD","name","NAME","processGraphQLQuery","query","hasChanged","ast","parse","visit","Argument","node","field","newObjects","i","length","_props$order$i","_props$order","order","err","Error","tranformDocument","error"],"sources":["../../src/query/transform-document.ts"],"sourcesContent":["import * as graphql from \"graphql\";\n\nfunction extractEnumValues(\n  value: graphql.ValueNode,\n  acc: Array<string> = [],\n): undefined | Array<string> {\n  let hasValue = false;\n  if (value.kind === graphql.Kind.ENUM) {\n    hasValue = true;\n    acc.push(value.value);\n  } else if (value.kind === graphql.Kind.LIST) {\n    // list can be empty but it indicate that it is set at least\n    hasValue = true;\n    for (const listItem of value.values) {\n      extractEnumValues(listItem, acc);\n    }\n  }\n  return hasValue ? acc : undefined;\n}\n\ninterface IOldSortObject {\n  fields: Array<string>;\n  order?: Array<\"ASC\" | \"DESC\">;\n}\n\nfunction isOldSortObject(props: unknown): props is IOldSortObject {\n  if (!props || typeof props !== `object` || Array.isArray(props)) {\n    return false;\n  }\n\n  let hasFields = false;\n  // skip if there any unexpected keys\n  for (const [key, value] of Object.entries(props)) {\n    if (key === `fields`) {\n      if (value) {\n        hasFields = true;\n      }\n    } else if (key !== `order`) {\n      return false;\n    }\n  }\n\n  return hasFields;\n}\n\nfunction pathSegmentsToAst(\n  path: string,\n  value: string,\n): graphql.ObjectValueNode | graphql.EnumValueNode {\n  return path.split(`___`).reduceRight(\n    (previousNode, fieldPathSegment) => {\n      return {\n        kind: graphql.Kind.OBJECT,\n        fields: [\n          {\n            kind: graphql.Kind.OBJECT_FIELD,\n            name: {\n              kind: graphql.Kind.NAME,\n              value: fieldPathSegment,\n            },\n            value: previousNode,\n          },\n        ],\n      };\n    },\n    {\n      kind: graphql.Kind.ENUM,\n      value,\n    } as graphql.ObjectValueNode | graphql.EnumValueNode,\n  );\n}\n\nfunction processGraphQLQuery(query: string | graphql.DocumentNode): {\n  ast: graphql.DocumentNode;\n  hasChanged: boolean;\n} {\n  try {\n    let hasChanged = false; // this is sort of a hack, but print changes formatting and we only want to use it when we have to\n    const ast = typeof query === `string` ? graphql.parse(query) : query;\n\n    graphql.visit(ast, {\n      Argument(node) {\n        if (node.name.value === `sort`) {\n          if (node.value.kind !== graphql.Kind.OBJECT) {\n            return;\n          }\n\n          // old style sort: `allX(sort: { fields: <something>, order?: </something> })\n          const props: Record<string, Array<string> | undefined> = {};\n          for (const field of node.value.fields) {\n            props[field.name.value] = extractEnumValues(field.value);\n          }\n\n          if (!isOldSortObject(props)) {\n            return;\n          }\n\n          // iterate over each pair of field and order and create new object style for each\n          const newObjects: Array<\n            graphql.ObjectValueNode | graphql.EnumValueNode\n          > = [];\n          for (let i = 0; i < props.fields.length; i++) {\n            const field = props.fields[i];\n            const order = props.order?.[i] ?? `ASC`;\n\n            newObjects.push(pathSegmentsToAst(field, order));\n          }\n\n          if (newObjects.length === 0) {\n            return;\n          }\n\n          // @ts-ignore node.value apparently is read-only ...\n          node.value =\n            newObjects.length > 1\n              ? {\n                  kind: graphql.Kind.LIST,\n                  values: newObjects,\n                }\n              : newObjects[0];\n          hasChanged = true;\n        } else if (node.name.value === `field`) {\n          if (node.value.kind !== graphql.Kind.ENUM) {\n            return;\n          }\n\n          // @ts-ignore read-only ...\n          node.value = pathSegmentsToAst(node.value.value, `SELECT`);\n          hasChanged = true;\n        }\n      },\n    });\n    return { ast, hasChanged };\n  } catch (err) {\n    throw new Error(\n      `GatsbySortAndAggrCodemod: GraphQL syntax error in query:\\n\\n${query}\\n\\nmessage:\\n\\n${err}`,\n    );\n  }\n}\n\nexport function tranformDocument(ast: graphql.DocumentNode): {\n  ast: graphql.DocumentNode;\n  hasChanged: boolean;\n  error?: Error;\n} {\n  try {\n    return processGraphQLQuery(ast);\n  } catch (error) {\n    return { ast, hasChanged: false, error };\n  }\n}\n"],"mappings":"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"}