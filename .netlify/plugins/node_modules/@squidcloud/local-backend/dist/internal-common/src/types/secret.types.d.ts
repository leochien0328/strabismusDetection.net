import { ApiKeyEntry, SecretEntry, SecretKey, SecretMetadata, SetSecretRequestEntry } from '../public-types/secret.public-types';
export type ApiKeyName = string;
export declare const BACKEND_API_KEY = "_BACKEND_API_KEY";
export declare const APP_API_KEY = "APP_API_KEY";
export interface ApplicationSecrets {
    custom: Record<SecretKey, SecretEntry>;
    apiKeys: Record<SecretKey, ApiKeyEntry>;
}
export interface SystemSecrets {
    sharedMongo: {
        password: string;
    };
    datadog: {
        appKey: string;
        apiKey: string;
    };
    openai: {
        apiKey: string;
    };
    anthropic: {
        apiKey: string;
    };
    gemini: {
        apiKey: string;
    };
    stability: {
        apiKey: string;
    };
    pinecone: {
        apiKey: string;
    };
}
export interface SetSecretRequest {
    entries: Array<SetSecretRequestEntry>;
}
export interface DeleteSecretRequest {
    keys: Array<SecretKey>;
}
export interface GetCustomSecretRequest {
    key: SecretKey;
}
export interface GetApiKeyRequest {
    key: SecretKey;
}
export type DeleteApiKeyRequest = Pick<SecretMetadata, 'key'>;
export interface ListApplicationSecretMetadataResponse {
    custom: SecretMetadata[];
    apiKeys: SecretMetadata[];
}
export type GenerateNewApiKeyRequest = Pick<SecretMetadata, 'key'>;
export interface GenerateNewApiKeyResponse {
    apiKey: string;
}
