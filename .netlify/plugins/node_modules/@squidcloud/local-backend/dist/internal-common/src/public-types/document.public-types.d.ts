import { IntegrationId } from './communication.public-types';
export type PrimitiveFieldType = string | number | boolean | null | Date;
export type FieldType = PrimitiveFieldType | Array<FieldType> | {
    [key: string]: FieldType;
};
export type FieldName<T = any> = string & keyof T;
export type DocId = string;
export type DocIdObj = Record<FieldName, any>;
export type DocIdOrDocIdObj = DocId | DocIdObj;
export type CollectionName = string;
export type DocumentData = Record<FieldName, any | undefined>;
export type DocTimestamp = number;
export interface SquidDocument {
    __docId__: DocId;
    __ts__: DocTimestamp;
    [fieldName: string]: FieldType | undefined;
}
export interface BeforeAndAfterDocs<T = SquidDocument> {
    before: T | undefined;
    after: T | undefined;
}
export interface SquidDocIdObj {
    collectionName: CollectionName;
    docId: DocId;
    integrationId: IntegrationId;
}
