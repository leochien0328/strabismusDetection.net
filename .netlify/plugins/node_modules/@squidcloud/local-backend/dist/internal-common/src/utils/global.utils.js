"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebugLogger = exports.disableDebugLogs = exports.enableDebugLogs = exports.isDebugEnabled = exports.getGlobal = void 0;
function getGlobal() {
    if (typeof window !== 'undefined') {
        return window;
    }
    if (typeof global !== 'undefined') {
        return global;
    }
    if (typeof self !== 'undefined') {
        return self;
    }
    throw new Error('Unable to locate global object');
}
exports.getGlobal = getGlobal;
function isDebugEnabled() {
    const globalObj = getGlobal();
    return globalObj && globalObj['SQUID_DEBUG_ENABLED'];
}
exports.isDebugEnabled = isDebugEnabled;
function enableDebugLogs() {
    const globalObj = getGlobal();
    globalObj['SQUID_DEBUG_ENABLED'] = true;
}
exports.enableDebugLogs = enableDebugLogs;
function disableDebugLogs() {
    const globalObj = getGlobal();
    globalObj['SQUID_DEBUG_ENABLED'] = false;
}
exports.disableDebugLogs = disableDebugLogs;
class DebugLogger {
    static log(...args) {
        DebugLogger.info(...args);
    }
    static info(...args) {
        console.log(`%c[${DebugLogger.getTimestampString()}] INFO`, 'color:green', ...args);
    }
    static warn(...args) {
        console.warn(`%c[${DebugLogger.getTimestampString()}] WARN`, 'color:yellow', ...args);
    }
    static error(...args) {
        console.error(`%c[${DebugLogger.getTimestampString()}] ERROR`, 'color:red', ...args);
    }
    static debug(...args) {
        if (!isDebugEnabled())
            return;
        console.log(`%c[${DebugLogger.getTimestampString()}] DEBUG`, 'color:cyan', ...args);
    }
    static getTimestampString() {
        const date = new Date();
        return `${date.toLocaleTimeString()}.${date.getMilliseconds()}`;
    }
}
exports.DebugLogger = DebugLogger;
//# sourceMappingURL=global.utils.js.map