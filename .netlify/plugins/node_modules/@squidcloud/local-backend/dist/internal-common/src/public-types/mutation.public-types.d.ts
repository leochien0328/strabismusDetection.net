import { SquidDocIdObj } from './document.public-types';
interface BaseMutation {
    type: MutationType;
    squidDocIdObj: SquidDocIdObj;
}
export type Mutation<T = any> = UpdateMutation<T> | InsertMutation<T> | DeleteMutation;
export type MutationType = 'insert' | 'update' | 'delete';
export interface DeleteMutation extends BaseMutation {
    type: 'delete';
}
export interface UpdateMutation<T = any> extends BaseMutation {
    type: 'update';
    properties: {
        [key in keyof T & string]?: Array<PropertyMutation<T[key]>>;
    };
}
export interface InsertMutation<T = any> extends BaseMutation {
    type: 'insert';
    properties: T;
}
export type PropertyMutation<Value = any> = ApplyNumericFnPropertyMutation | ApplyStringFnPropertyMutation | ValueUpdatePropertyMutation<Value> | RemovePropertyMutation;
export interface ValueUpdatePropertyMutation<Value = any> {
    type: 'update';
    value: Value;
}
export interface ApplyNumericFnPropertyMutation {
    type: 'applyNumericFn';
    fn: 'increment';
    value: number;
}
export interface RemovePropertyMutation {
    type: 'removeProperty';
}
interface ApplyExtendString {
    type: 'applyStringFn';
    fn: 'extendString';
    value: string;
}
interface ApplyTrimString {
    type: 'applyStringFn';
    fn: 'trim';
}
export type ApplyStringFnPropertyMutation = ApplyExtendString | ApplyTrimString;
export {};
