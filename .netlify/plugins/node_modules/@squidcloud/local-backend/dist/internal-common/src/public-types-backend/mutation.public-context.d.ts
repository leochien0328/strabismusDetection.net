import { Paths } from '../public-types/typescript.public-types';
import { BeforeAndAfterDocs } from '../public-types/document.public-types';
import { Mutation, MutationType } from '../public-types/mutation.public-types';
export declare class MutationContext<T = any> {
    readonly mutation: Mutation<T>;
    readonly beforeAndAfterDocs: BeforeAndAfterDocs<T>;
    readonly serverTimeStamp: Date;
    constructor(mutation: Mutation<T>, beforeAndAfterDocs: BeforeAndAfterDocs<T>, serverTimeStamp: Date);
    getMutationType(): MutationType;
    get before(): T | undefined;
    get after(): T | undefined;
    affectsPath(path: Paths<T>): boolean;
    affectedPaths(startingRoot?: Paths<T> | string): Array<Paths<T>>;
    private checkPath;
}
